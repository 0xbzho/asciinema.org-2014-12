[[0.111642,{"lines":{"0":[["                                                                                ",{}]],"1":[["                                                                                ",{}]],"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]],"4":[["                                                                                ",{}]],"5":[["                                                                                ",{}]],"6":[["                                                                                ",{}]],"7":[["                                                                                ",{}]],"8":[["                                                                                ",{}]],"9":[["                                                                                ",{}]],"10":[["                                                                                ",{}]],"11":[["                                                                                ",{}]],"12":[["                                                                                ",{}]],"13":[["                                                                                ",{}]],"14":[["                                                                                ",{}]],"15":[["                                                                                ",{}]],"16":[["                                                                                ",{}]],"17":[["                                                                                ",{}]],"18":[["                                                                                ",{}]],"19":[["                                                                                ",{}]],"20":[["                                                                                ",{}]],"21":[["                                                                                ",{}]],"22":[["                                                                                ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.024669,{"lines":{"2":[["hq1@kosmos ",{"bg":4}],["~/blog_demo     ",{"fg":6,"bg":4}],["                                                     ",{"fg":1,"bg":4,"bold":true}]],"3":[["$                                                                               ",{}]]},"cursor":{"x":2,"y":3}}],[1.08659,{"lines":{"3":[["$ v                                                                             ",{}]]},"cursor":{"x":3}}],[0.071052,{"lines":{"3":[["$ vi                                                                            ",{}]]},"cursor":{"x":4}}],[0.207476,{"lines":{"3":[["$ vim                                                                           ",{}]]},"cursor":{"x":5}}],[0.072798,{"cursor":{"x":6}}],[0.63966,{"lines":{"3":[["$ vim s                                                                         ",{}]]},"cursor":{"x":7}}],[0.104062,{"lines":{"3":[["$ vim so                                                                        ",{}]]},"cursor":{"x":8}}],[0.041101,{"lines":{"3":[["$ vim som                                                                       ",{}]]},"cursor":{"x":9}}],[0.130481,{"lines":{"3":[["$ vim some_module.erl",{}],[" ",{"bold":true}],["                                                          ",{}]]},"cursor":{"x":22}}],[0.5717,{"lines":{"3":[["$ vim some_module.erl                                                           ",{}]]},"cursor":{"x":0,"y":4}}],[0.07722900000000001,{"cursor":{"y":22}}],[0.010895,{}],[0.012062,{"lines":{"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]]}}],[0.065888,{}],[0.000204,{"lines":{"20":[["\"some_module.erl\" 7L, 159C                                                      ",{}]]},"cursor":{"x":26,"y":20,"visible":false}}],[0.029827,{}],[0.011102,{}],[0.024442,{}],[0.031955,{"lines":{"0":[["  5 -module",{"fg":130}],["(",{}],["some_module",{"fg":1}],[").                                                       ",{}]],"1":[["  4 ",{"fg":130}],["                                                                            ",{}]],"2":[["  3 -export",{"fg":130}],["(",{}],["[",{"fg":5}],["demo_time",{}],["/",{"fg":130}],["0",{"fg":1}],["]",{"fg":5}],[").                                                     ",{}]],"3":[["  2 ",{"fg":130}],["                                                                            ",{}]],"4":[["  1 ",{"fg":130}],["demo_time() ",{}],["->",{"fg":130}],["                                                              ",{}]],"5":[["  0 ",{"fg":130}],["    ",{"bg":234}],["Props",{"fg":6,"bg":234}],[" ",{"bg":234}],["=",{"fg":130,"bg":234}],[" application:get_env(",{"bg":234}],["some_app",{"fg":1,"bg":234}],[", ",{"bg":234}],["some_key",{"fg":1,"bg":234}],["),                        ",{"bg":234}]],"6":[["  1 ",{"fg":130}],["    proplists:get_value(",{}],["some_prop",{"fg":1}],[", ",{}],["Props",{"fg":6}],[").                                  ",{}]],"7":[["~                                                                               ",{"fg":12}]],"8":[["~                                                                               ",{"fg":12}]],"9":[["~                                                                               ",{"fg":12}]],"10":[["~                                                                               ",{"fg":12}]],"11":[["~                                                                               ",{"fg":12}]],"12":[["~                                                   ",{"fg":12}],["                            ",{}]]},"cursor":{"x":52,"y":12}}],[9.399999999999999e-05,{"lines":{"12":[["~                                                                               ",{"fg":12}]],"13":[["~                                                                               ",{"fg":12}]],"14":[["~                                                                               ",{"fg":12}]],"15":[["~                                                                               ",{"fg":12}]],"16":[["~                                                                               ",{"fg":12}]],"17":[["~                                                                               ",{"fg":12}]],"18":[["~                                                                               ",{"fg":12}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":28,"y":5,"visible":true}}],[0.963944,{"lines":{"0":[["  4 -module",{"fg":130}],["(",{}],["some_module",{"fg":1}],[").                                                       ",{}]],"1":[["  3 ",{"fg":130}],["                                                                            ",{}]],"2":[["  2 -export",{"fg":130}],["(",{}],["[",{"fg":5}],["demo_time",{}],["/",{"fg":130}],["0",{"fg":1}],["]",{"fg":5}],[").                                                     ",{}]],"3":[["  1 ",{"fg":130}],["                                                                            ",{}]],"4":[["  0 ",{"fg":130}],["demo_time() ",{"bg":234}],["->",{"fg":130,"bg":234}],["                                                              ",{"bg":234}]],"5":[["  1 ",{"fg":130}],["    ",{}],["Props",{"fg":6}],[" ",{}],["=",{"fg":130}],[" application:get_env(",{}],["some_app",{"fg":1}],[", ",{}],["some_key",{"fg":1}],["),                        ",{}]],"6":[["  2 ",{"fg":130}],["    proplists:get_value(",{}],["some_prop",{"fg":1}],[", ",{}],["Props",{"fg":6}],[").                                  ",{}]]},"cursor":{"x":17,"y":4}}],[0.399717,{"lines":{"0":[["  5 -module",{"fg":130}],["(",{}],["some_module",{"fg":1}],[").                                                       ",{}]],"1":[["  4 ",{"fg":130}],["                                                                            ",{}]],"2":[["  3 -export",{"fg":130}],["(",{}],["[",{"fg":5}],["demo_time",{}],["/",{"fg":130}],["0",{"fg":1}],["]",{"fg":5}],[").                                                     ",{}]],"3":[["  2 ",{"fg":130}],["                                                                            ",{}]],"4":[["  1 ",{"fg":130}],["demo_time() ",{}],["->",{"fg":130}],["                                                              ",{}]],"5":[["  0 ",{"fg":130}],["    ",{"bg":234}],["Props",{"fg":6,"bg":234}],[" ",{"bg":234}],["=",{"fg":130,"bg":234}],[" application:get_env(",{"bg":234}],["some_app",{"fg":1,"bg":234}],[", ",{"bg":234}],["some_key",{"fg":1,"bg":234}],["),                        ",{"bg":234}]],"6":[["  1 ",{"fg":130}],["    proplists:get_value(",{}],["some_prop",{"fg":1}],[", ",{}],["Props",{"fg":6}],[").                                  ",{}]]},"cursor":{"x":28,"y":5}}],[1.302474,{"cursor":{"x":8}}],[0.255985,{"cursor":{"x":14}}],[0.198993,{"cursor":{"x":16}}],[0.208826,{"cursor":{"x":27}}],[0.232214,{"cursor":{"x":28}}],[0.67159,{"cursor":{"visible":false}}],[0.057738,{}],[0.048856,{"lines":{"0":[["              returns undefined.                                                ",{}]],"1":[["                                                                                ",{}]],"2":[["                                                                                ",{}]],"3":[["       get_env(Par) -> undefined | {ok, Val}                                    ",{"bg":234}]],"4":[["                                                                                ",{}]],"5":[["       get_env(Application, Par) -> undefined | {ok, Val}                       ",{}]],"6":[["                                                                                ",{}]],"7":[["              Types:                                                            ",{}]],"8":[["                                                                                ",{}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:application:get_env][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  --*------------ ",{"fg":188,"bg":235}]],"10":[["  3 -export",{"fg":130}],["(",{}],["[",{"fg":5}],["demo_time",{}],["/",{"fg":130}],["0",{"fg":1}],["]",{"fg":5}],[").                                                     ",{}]],"11":[["  2 ",{"fg":130}],["                                                                            ",{}]],"12":[["  1 ",{"fg":130}],["demo_time() ",{}],["->",{"fg":130}],["                                                              ",{}]],"13":[["  0 ",{"fg":130}],["    ",{}],["Props",{"fg":6}],[" ",{}],["=",{"fg":130}],[" application:get_env(",{}],["some_app",{"fg":1}],[", ",{}],["some_key",{"fg":1}],["),                        ",{}]],"14":[["  1 ",{"fg":130}],["    proplists:get_value(",{}],["some_prop",{"fg":1}],[", ",{}],["Props",{"fg":6}],[").                                  ",{}]],"19":[[" some_module.erl                              ",{"fg":59,"bg":235}],["          erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":46,"y":19}}],[6.7e-05,{"lines":{"19":[[" some_module.erl                                        erlang  ----*********** ",{"fg":59,"bg":235}]]},"cursor":{"x":0,"y":3,"visible":true}}],[0.96011,{"lines":{"3":[[" ",{}],["      get_env(Par) -> undefined | {ok, Val}",{"bg":7}],["                                    ",{}]],"9":[[" ",{"fg":63,"bg":235}],["V-LINE",{"fg":63,"bg":235,"bold":true}],["  [ref-erlang:application:get_env][-] ",{"fg":63,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  --*------------ ",{"fg":63,"bg":235}]]},"cursor":{"x":80,"y":9,"visible":false}}],[0.00053,{"lines":{"22":[["-- VISUAL LINE --",{"bold":true}],["                                                               ",{}]]},"cursor":{"x":0,"y":3,"visible":true}}],[0.350492,{"lines":{"3":[["       get_env(Par) -> undefined | {ok, Val}",{"bg":7}],["                                    ",{}]]},"cursor":{"y":4}}],[0.190669,{"lines":{"5":[[" ",{}],["      get_env(Application, Par) -> undefined | {ok, Val}",{"bg":7}],["                       ",{}]]},"cursor":{"y":5}}],[0.17512,{"lines":{"0":[["                                                                                ",{}]],"2":[["       get_env(Par) -> undefined | {ok, Val}",{"bg":7}],["                                    ",{}]],"3":[["                                                                                ",{}]],"4":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"bg":7}],["                       ",{}]],"5":[["                                                                                ",{}]],"6":[["              Types:                                                            ",{}]],"7":[["                                                                                ",{}]],"8":[["                 Application = Par = atom()                                     ",{}]]},"cursor":{"x":43,"y":8,"visible":false}}],[0.001012,{"lines":{"20":[["                                                                                ",{}]]},"cursor":{"x":0,"y":5,"visible":true}}],[0.167067,{"lines":{"1":[["       get_env(Par) -> undefined | {ok, Val}",{"bg":7}],["                                    ",{}]],"2":[["                                                                                ",{}]],"3":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"bg":7}],["                       ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["             Types:",{"bg":7}],["                                                            ",{}]],"6":[["                                                                                ",{}]],"7":[["                 Application = Par = atom()                                     ",{}]],"8":[["                 Val = term()                                                   ",{}]]},"cursor":{"x":29,"y":8,"visible":false}}],[0.001094,{"cursor":{"x":0,"y":5,"visible":true}}],[0.302742,{"lines":{"0":[["       get_env(Par) -> undefined | {ok, Val}",{"bg":7}],["                                    ",{}]],"1":[["                                                                                ",{}]],"2":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"bg":7}],["                       ",{}]],"3":[["                                                                                ",{}]],"4":[["              Types:",{"bg":7}],["                                                            ",{}]],"5":[["                                                                                ",{}]],"6":[["                 Application = Par = atom()                                     ",{}]],"7":[["                 Val = term()                                                   ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.0009859999999999999,{"cursor":{"x":0,"y":5,"visible":true}}],[0.19087,{"lines":{"0":[["                                                                                ",{}]],"1":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"bg":7}],["                       ",{}]],"2":[["                                                                                ",{}]],"3":[["              Types:",{"bg":7}],["                                                            ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["                Application = Par = atom()",{"bg":7}],["                                     ",{}]],"6":[["                 Val = term()                                                   ",{}]],"7":[["                                                                                ",{}]],"8":[["              Returns the value of the configuration parameter Par for  Appli-  ",{}]]},"cursor":{"x":78,"y":8,"visible":false}}],[0.001084,{"cursor":{"x":0,"y":5,"visible":true}}],[0.182903,{"lines":{"0":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"bg":7}],["                       ",{}]],"1":[["                                                                                ",{}]],"2":[["              Types:",{"bg":7}],["                                                            ",{}]],"3":[["                                                                                ",{}]],"4":[["                 Application = Par = atom()",{"bg":7}],["                                     ",{}]],"5":[[" ",{}],["                Val = term()",{"bg":7}],["                                                   ",{}]],"6":[["                                                                                ",{}]],"7":[["              Returns the value of the configuration parameter Par for  Appli-  ",{}]],"8":[["              cation.  If  the application argument is omitted, it defaults to  ",{}]]},"cursor":{"x":78,"y":8,"visible":false}}],[0.001026,{"cursor":{"x":0,"y":5,"visible":true}}],[0.247166,{"lines":{"0":[["                                                                                ",{}]],"1":[["              Types:",{"bg":7}],["                                                            ",{}]],"2":[["                                                                                ",{}]],"3":[["                 Application = Par = atom()",{"bg":7}],["                                     ",{}]],"4":[["                 Val = term()",{"bg":7}],["                                                   ",{}]],"5":[["                                                                                ",{}]],"6":[["              Returns the value of the configuration parameter Par for  Appli-  ",{}]],"7":[["              cation.  If  the application argument is omitted, it defaults to  ",{}]],"8":[["              the application of the calling process.                           ",{}]]},"cursor":{"x":53,"y":8,"visible":false}}],[0.001115,{"cursor":{"x":0,"y":5,"visible":true}}],[0.222778,{"lines":{"0":[["              Types:",{"bg":7}],["                                                            ",{}]],"1":[["                                                                                ",{}]],"2":[["                 Application = Par = atom()",{"bg":7}],["                                     ",{}]],"3":[["                 Val = term()",{"bg":7}],["                                                   ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["             Returns the value of the configuration parameter Par for  Appli-",{"bg":7}],["  ",{}]],"6":[["              cation.  If  the application argument is omitted, it defaults to  ",{}]],"7":[["              the application of the calling process.                           ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":78,"visible":false}}],[0.001049,{"cursor":{"x":0,"visible":true}}],[0.190218,{"lines":{"0":[["                                                                                ",{}]],"1":[["                 Application = Par = atom()",{"bg":7}],["                                     ",{}]],"2":[["                 Val = term()",{"bg":7}],["                                                   ",{}]],"3":[["                                                                                ",{}]],"4":[["              Returns the value of the configuration parameter Par for  Appli-",{"bg":7}],["  ",{}]],"5":[[" ",{}],["             cation.  If  the application argument is omitted, it defaults to",{"bg":7}],["  ",{}]],"6":[["              the application of the calling process.                           ",{}]],"7":[["                                                                                ",{}]],"8":[["              If the specified application is not loaded, or the configuration  ",{}]]},"cursor":{"x":78,"y":8,"visible":false}}],[0.000563,{"cursor":{"x":0,"y":5,"visible":true}}],[0.232331,{"lines":{"0":[["                 Application = Par = atom()",{"bg":7}],["                                     ",{}]],"1":[["                 Val = term()",{"bg":7}],["                                                   ",{}]],"2":[["                                                                                ",{}]],"3":[["              Returns the value of the configuration parameter Par for  Appli-",{"bg":7}],["  ",{}]],"4":[["              cation.  If  the application argument is omitted, it defaults to",{"bg":7}],["  ",{}]],"5":[[" ",{}],["             the application of the calling process.",{"bg":7}],["                           ",{}]],"6":[["                                                                                ",{}]],"7":[["              If the specified application is not loaded, or the configuration  ",{}]],"8":[["              parameter  does  not exist, or if the process executing the call  ",{}]]},"cursor":{"x":78,"y":8,"visible":false}}],[0.001028,{"cursor":{"x":0,"y":5,"visible":true}}],[1.442251,{"lines":{"0":[["                 Application = Par = atom()                                     ",{}]],"1":[["                 Val = term()                                                   ",{}]],"3":[["              Returns the value of the configuration parameter Par for  Appli-  ",{}]],"4":[["              cation.  If  the application argument is omitted, it defaults to  ",{}]],"5":[["              the application of the calling process.                           ",{"bg":234}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:application:get_env][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  --*------------ ",{"fg":188,"bg":235}]],"22":[["                                                                                ",{}]]}}],[0.960502,{"lines":{"5":[["              the application of the calling process.                           ",{}]],"9":[[" [ref-erlang:application:get_env][-] RO             ref-erlang  --*------------ ",{"fg":59,"bg":235}]],"13":[["  0 ",{"fg":130}],["    ",{"bg":234}],["Props",{"fg":6,"bg":234}],[" ",{"bg":234}],["=",{"fg":130,"bg":234}],[" application:get_env(",{"bg":234}],["some_app",{"fg":1,"bg":234}],[", ",{"bg":234}],["some_key",{"fg":1,"bg":234}],["),                        ",{"bg":234}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  ----*********** ",{"fg":188,"bg":235}]]},"cursor":{"x":28,"y":13}}],[0.645468,{"lines":{"10":[["  4 -export",{"fg":130}],["(",{}],["[",{"fg":5}],["demo_time",{}],["/",{"fg":130}],["0",{"fg":1}],["]",{"fg":5}],[").                                                     ",{}]],"11":[["  3 ",{"fg":130}],["                                                                            ",{}]],"12":[["  2 ",{"fg":130}],["demo_time() ",{}],["->",{"fg":130}],["                                                              ",{}]],"13":[["  1 ",{"fg":130}],["    ",{}],["Props",{"fg":6}],[" ",{}],["=",{"fg":130}],[" application:get_env(",{}],["some_app",{"fg":1}],[", ",{}],["some_key",{"fg":1}],["),                        ",{}]],"14":[["  0 ",{"fg":130}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":1,"bg":234}],[", ",{"bg":234}],["Props",{"fg":6,"bg":234}],[").                                  ",{"bg":234}]]},"cursor":{"y":14}}],[0.382358,{"cursor":{"x":8}}],[1.472887,{"cursor":{"x":16}}],[0.239883,{"cursor":{"x":17}}],[0.480279,{"cursor":{"x":18}}],[0.439341,{"cursor":{"visible":false}}],[0.058541,{}],[0.024518,{"lines":{"0":[["              ing duplicates.                                                   ",{}]],"1":[["                                                                                ",{}]],"3":[["       get_value(Key, List) -> term()                                           ",{"bg":234}]],"4":[["                                                                                ",{}]],"5":[["              Types:                                                            ",{}]],"7":[["                 Key = term()                                                   ",{}]],"8":[["                 List = [term()]                                                ",{}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:proplists:get_value][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  ------*-------- ",{"fg":188,"bg":235}]],"14":[["  0 ",{"fg":130}],["    proplists:get_value(",{}],["some_prop",{"fg":1}],[", ",{}],["Props",{"fg":6}],[").                                  ",{}]],"19":[[" some_module.erl                                        erlang  ----*********** ",{"fg":59,"bg":235}]],"20":[["--No lines in buffer--                                                          ",{}]]},"cursor":{"x":22,"y":20}}],[0.000546,{"cursor":{"x":0,"y":3,"visible":true}}],[0.985764,{"lines":{"3":[[" ",{}],["      get_value(Key, List) -> term()",{"bg":7}],["                                           ",{}]],"9":[[" ",{"fg":63,"bg":235}],["V-LINE",{"fg":63,"bg":235,"bold":true}],["  [ref-erlang:proplists:get_value][-] ",{"fg":63,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  ------*-------- ",{"fg":63,"bg":235}]]},"cursor":{"x":80,"y":9,"visible":false}}],[0.000608,{"lines":{"22":[["-- VISUAL LINE --",{"bold":true}],["                                                               ",{}]]},"cursor":{"x":0,"y":3,"visible":true}}],[0.307706,{"lines":{"3":[["       get_value(Key, List) -> term()",{"bg":7}],["                                           ",{}]]},"cursor":{"y":4}}],[0.174969,{"lines":{"5":[[" ",{}],["             Types:",{"bg":7}],["                                                            ",{}]]},"cursor":{"y":5}}],[0.158702,{"lines":{"0":[["                                                                                ",{}]],"2":[["       get_value(Key, List) -> term()",{"bg":7}],["                                           ",{}]],"3":[["                                                                                ",{}]],"4":[["              Types:",{"bg":7}],["                                                            ",{}]],"5":[["                                                                                ",{}]],"6":[["                 Key = term()                                                   ",{}]],"7":[["                 List = [term()]                                                ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.001027,{"lines":{"20":[["                                                                                ",{}]]},"cursor":{"x":0,"y":5,"visible":true}}],[0.159129,{"lines":{"1":[["       get_value(Key, List) -> term()",{"bg":7}],["                                           ",{}]],"2":[["                                                                                ",{}]],"3":[["              Types:",{"bg":7}],["                                                            ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["                Key = term()",{"bg":7}],["                                                   ",{}]],"6":[["                 List = [term()]                                                ",{}]],"7":[["                                                                                ",{}]],"8":[["              Equivalent to get_value(Key, List, undefined).                    ",{}]]},"cursor":{"x":60,"y":8,"visible":false}}],[0.00105,{"cursor":{"x":0,"y":5,"visible":true}}],[0.166786,{"lines":{"0":[["       get_value(Key, List) -> term()",{"bg":7}],["                                           ",{}]],"1":[["                                                                                ",{}]],"2":[["              Types:",{"bg":7}],["                                                            ",{}]],"3":[["                                                                                ",{}]],"4":[["                 Key = term()",{"bg":7}],["                                                   ",{}]],"5":[[" ",{}],["                List = [term()]",{"bg":7}],["                                                ",{}]],"6":[["                                                                                ",{}]],"7":[["              Equivalent to get_value(Key, List, undefined).                    ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":32,"visible":false}}],[0.001206,{"cursor":{"x":0,"visible":true}}],[0.166982,{"lines":{"0":[["                                                                                ",{}]],"1":[["              Types:",{"bg":7}],["                                                            ",{}]],"2":[["                                                                                ",{}]],"3":[["                 Key = term()",{"bg":7}],["                                                   ",{}]],"4":[["                 List = [term()]",{"bg":7}],["                                                ",{}]],"5":[["                                                                                ",{}]],"6":[["              Equivalent to get_value(Key, List, undefined).                    ",{}]],"7":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.001187,{"cursor":{"x":0,"y":5,"visible":true}}],[0.166869,{"lines":{"0":[["              Types:",{"bg":7}],["                                                            ",{}]],"1":[["                                                                                ",{}]],"2":[["                 Key = term()",{"bg":7}],["                                                   ",{}]],"3":[["                 List = [term()]",{"bg":7}],["                                                ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["             Equivalent to get_value(Key, List, undefined).",{"bg":7}],["                    ",{}]],"6":[["                                                                                ",{}]],"8":[["       get_value(Key, List, Default) -> term()                                  ",{}]]},"cursor":{"x":46,"y":8,"visible":false}}],[0.001028,{"cursor":{"x":0,"y":5,"visible":true}}],[0.166011,{"lines":{"0":[["                                                                                ",{}]],"1":[["                 Key = term()",{"bg":7}],["                                                   ",{}]],"2":[["                 List = [term()]",{"bg":7}],["                                                ",{}]],"3":[["                                                                                ",{}]],"4":[["              Equivalent to get_value(Key, List, undefined).",{"bg":7}],["                    ",{}]],"5":[["                                                                                ",{}]],"7":[["       get_value(Key, List, Default) -> term()                                  ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.0005999999999999999,{"cursor":{"x":0,"y":5,"visible":true}}],[0.176395,{"lines":{"0":[["                 Key = term()",{"bg":7}],["                                                   ",{}]],"1":[["                 List = [term()]",{"bg":7}],["                                                ",{}]],"2":[["                                                                                ",{}]],"3":[["              Equivalent to get_value(Key, List, undefined).",{"bg":7}],["                    ",{}]],"4":[["                                                                                ",{}]],"6":[["       get_value(Key, List, Default) -> term()                                  ",{}]],"7":[["                                                                                ",{}]],"8":[["              Types:                                                            ",{}]]},"cursor":{"x":20,"y":8,"visible":false}}],[0.001051,{"cursor":{"x":0,"y":5,"visible":true}}],[0.190636,{"lines":{"0":[["                 List = [term()]",{"bg":7}],["                                                ",{}]],"1":[["                                                                                ",{}]],"2":[["              Equivalent to get_value(Key, List, undefined).",{"bg":7}],["                    ",{}]],"3":[["                                                                                ",{}]],"5":[[" ",{}],["      get_value(Key, List, Default) -> term()",{"bg":7}],["                                  ",{}]],"6":[["                                                                                ",{}]],"7":[["              Types:                                                            ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":46,"visible":false}}],[0.001089,{"cursor":{"x":0,"visible":true}}],[0.578871,{"lines":{"0":[["                 List = [term()]                                                ",{}]],"2":[["              Equivalent to get_value(Key, List, undefined).                    ",{}]],"5":[["       get_value(Key, List, Default) -> term()                                  ",{"bg":234}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:proplists:get_value][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  ------*-------- ",{"fg":188,"bg":235}]],"22":[["                                                                                ",{}]]}}],[0.715572,{"lines":{"20":[[":bdelete                                                                        ",{}]]},"cursor":{"y":20,"visible":false}}],[0.02265,{"lines":{"0":[["  6 -module",{"fg":130}],["(",{}],["some_module",{"fg":1}],[").                                                       ",{}]],"1":[["  5 ",{"fg":130}],["                                                                            ",{}]],"2":[["  4 -export",{"fg":130}],["(",{}],["[",{"fg":5}],["demo_time",{}],["/",{"fg":130}],["0",{"fg":1}],["]",{"fg":5}],[").                                                     ",{}]],"3":[["  3 ",{"fg":130}],["                                                                            ",{}]],"4":[["  2 ",{"fg":130}],["demo_time() ",{}],["->",{"fg":130}],["                                                              ",{}]],"5":[["  1 ",{"fg":130}],["    ",{}],["Props",{"fg":6}],[" ",{}],["=",{"fg":130}],[" application:get_env(",{}],["some_app",{"fg":1}],[", ",{}],["some_key",{"fg":1}],["),                        ",{}]],"6":[["  0 ",{"fg":130}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":1,"bg":234}],[", ",{"bg":234}],["Props",{"fg":6,"bg":234}],[").                                  ",{"bg":234}]],"7":[["~                                                                               ",{"fg":12}]],"8":[["~                                                                               ",{"fg":12}]],"9":[["~                                                                               ",{"fg":12}]],"10":[["~                                                                               ",{"fg":12}]],"11":[["~                                                                               ",{"fg":12}]],"12":[["~                                                   ",{"fg":12}],["                            ",{}]]},"cursor":{"x":52,"y":12}}],[9.899999999999999e-05,{"lines":{"12":[["~                                                                               ",{"fg":12}]],"13":[["~                                                                               ",{"fg":12}]],"14":[["~                                                                               ",{"fg":12}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":18,"y":6,"visible":true}}],[0.9531230000000001,{"lines":{"20":[[":                                                                               ",{}]]},"cursor":{"x":1,"y":20,"visible":false}}],[3.1e-05,{"lines":{"20":[[":Unite ref/erlang -vertical -default-action=split                               ",{}]]},"cursor":{"x":0}}],[0.07603600000000001,{"lines":{"22":[["-- INSERT --",{"bold":true}],["                                                                    ",{}]]},"cursor":{"x":12,"y":22}}],[0.010475,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["                                                                            ",{}]],"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  CosEventChannelAdmin                                                        ",{"fg":0,"bg":7}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_ConsumerAdmin                                          ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_EventChannel                                           ",{}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_ProxyPullConsumer                                      ",{}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_ProxyPullSupplier                                      ",{}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_ProxyPushConsumer                                      ",{}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_ProxyPushSupplier                                      ",{}]],"8":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_SupplierAdmin                                          ",{}]],"9":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventDomainAdmin                                                         ",{}]],"10":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventDomainAdmin_EventDomain                                             ",{}]],"11":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventDomainAdmin_EventDomainFactory                                      ",{}]],"12":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosFileTransfer_Directory                                                   ",{}]],"13":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosFileTransfer_File                                                        ",{}]],"14":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosFileTransfer_FileIterator                                                ",{}]],"15":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosFileTransfer_FileTransferSession                                         ",{}]],"16":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosFileTransfer_VirtualFileSystem                                           ",{}]],"17":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosNaming                                                                   ",{}]],"18":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosNaming_BindingIterator                                                   ",{}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(30/628)                         [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"x":4,"y":0,"visible":true}}],[0.586101,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["l                                                                           ",{}]]},"cursor":{"x":5,"visible":false}}],[0.003966,{"lines":{"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  lcnt                                                                        ",{"fg":0,"bg":7}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["l",{"fg":6}],["eex                                                                        ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["l",{"fg":6}],["ib                                                                         ",{}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["l",{"fg":6}],["ists                                                                       ",{}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["l",{"fg":6}],["name                                                                       ",{}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["l",{"fg":6}],["name_component                                                             ",{}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["l",{"fg":6}],["og_mf_h                                                                    ",{}]],"8":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"9":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"10":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"11":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"12":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"13":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"14":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"15":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"16":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"17":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"18":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(7)                              [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"visible":true}}],[0.079197,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["li                                                                          ",{}]]},"cursor":{"x":6,"visible":false}}],[0.002773,{"lines":{"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  lib                                                                         ",{"fg":0,"bg":7}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["li",{"fg":6}],["sts                                                                       ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(2)                              [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"visible":true}}],[0.148148,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["lis                                                                         ",{}]],"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  lists                                                                       ",{"fg":0,"bg":7}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(1)                              [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"x":7}}],[0.117387,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["list                                                                        ",{}]]},"cursor":{"x":8}}],[0.080568,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["lists                                                                       ",{}]]},"cursor":{"x":9}}],[0.265957,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["lists:                                                                      ",{}]],"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  lists:all                                                                   ",{"fg":0,"bg":7}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["any                                                                   ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["append                                                                ",{}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["concat                                                                ",{}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["delete                                                                ",{}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["dropwhile                                                             ",{}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["duplicate                                                             ",{}]],"8":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["filter                                                                ",{}]],"9":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["filtermap                                                             ",{}]],"10":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["flatlength                                                            ",{}]],"11":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["flatmap                                ",{}],["                               ",{"fg":12}]]},"cursor":{"x":49,"y":11,"visible":false}}],[9.399999999999999e-05,{"lines":{"11":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["flatmap                                                               ",{}]],"12":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["flatten                                                               ",{}]],"13":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["foldl                                                                 ",{}]],"14":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["foldr                                                                 ",{}]],"15":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["foreach                                                               ",{}]],"16":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["keydelete                                                             ",{}]],"17":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["keyfind                                                               ",{}]],"18":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["keymap                                                                ",{}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(30/59)                          [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"x":10,"y":0,"visible":true}}],[0.417064,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["lists:r                                                                     ",{}]]},"cursor":{"x":11,"visible":false}}],[0.003267,{"lines":{"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  lists:reverse                                                               ",{"fg":0,"bg":7}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"8":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"9":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"10":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"11":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"12":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"13":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"14":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"15":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"16":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"17":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"18":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(1)                              [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"visible":true}}],[0.161324,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["lists:re                                                                    ",{}]]},"cursor":{"x":12}}],[0.111702,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["lists:rev                                                                   ",{}]]},"cursor":{"x":13}}],[0.07140000000000001,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["lists:reve                                                                  ",{}]]},"cursor":{"x":14}}],[0.15235,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["lists:rever                                                                 ",{}]]},"cursor":{"x":15}}],[0.304296,{"lines":{"20":[["                                                                                ",{}]],"22":[["                                                                                ",{}]]},"cursor":{"x":0,"y":22,"visible":false}}],[0.007917,{"lines":{"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(1)                              [unite] - default ",{"fg":188,"bg":235}]]},"cursor":{"x":14,"y":0,"visible":true}}],[0.012675,{"cursor":{"visible":false}}],[0.011685,{"lines":{"0":[["  6 -module",{"fg":130}],["(",{}],["some_module",{"fg":1}],[").                                                       ",{}]],"1":[["  5 ",{"fg":130}],["                                                                            ",{}]],"2":[["  4 -export",{"fg":130}],["(",{}],["[",{"fg":5}],["demo_time",{}],["/",{"fg":130}],["0",{"fg":1}],["]",{"fg":5}],[").                                                     ",{}]],"3":[["  3 ",{"fg":130}],["                                                                            ",{}]],"4":[["  2 ",{"fg":130}],["demo_time() ",{}],["->",{"fg":130}],["                                                              ",{}]],"5":[["  1 ",{"fg":130}],["    ",{}],["Props",{"fg":6}],[" ",{}],["=",{"fg":130}],[" application:get_env(",{}],["some_app",{"fg":1}],[", ",{}],["some_key",{"fg":1}],["),                        ",{}]],"6":[["  0 ",{"fg":130}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":1,"bg":234}],[", ",{"bg":234}],["Props",{"fg":6,"bg":234}],[").                                  ",{"bg":234}]],"7":[["~                                                                               ",{"fg":12}]],"8":[["~                                                                               ",{"fg":12}]],"9":[["~                                                                               ",{"fg":12}]],"10":[["~                                                                               ",{"fg":12}]],"11":[["~                                                                               ",{"fg":12}]],"12":[["~                                                                               ",{"fg":12}]],"13":[["~                                                                               ",{"fg":12}]],"14":[["~                                                                               ",{"fg":12}]],"15":[["~                                                                               ",{"fg":12}]],"16":[["~                                                                               ",{"fg":12}]],"17":[["~                                                                               ",{"fg":12}]],"18":[["~                                                                               ",{"fg":12}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":79,"y":19}}],[0.06941700000000001,{}],[0.042536,{}],[0.012332,{}],[0.011874,{}],[0.010716,{}],[0.047737,{"lines":{"0":[["              Returns true if List1 is a prefix of List2, otherwise false.      ",{}]],"1":[["                                                                                ",{}]],"2":[["                                                                                ",{}]],"3":[["       reverse(List1) -> List2                                                  ",{"bg":234}]],"4":[["                                                                                ",{}]],"5":[["              Types:                                                            ",{}]],"6":[["                                                                                ",{}]],"7":[["                 List1 = List2 = [T]                                            ",{}]],"8":[["                 T = term()                                                     ",{}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:lists:reverse][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["           ref-erlang  ---------*----- ",{"fg":188,"bg":235}]],"10":[["  3 ",{"fg":130}],["                                                                            ",{}]],"11":[["  2 ",{"fg":130}],["demo_time() ",{}],["->",{"fg":130}],["                                                              ",{}]],"12":[["  1 ",{"fg":130}],["    ",{}],["Props",{"fg":6}],[" ",{}],["=",{"fg":130}],[" application:get_env(",{}],["some_app",{"fg":1}],[", ",{}],["some_key",{"fg":1}],["),                        ",{}]],"13":[["  0 ",{"fg":130}],["    proplists:get_value(",{}],["some_prop",{"fg":1}],[", ",{}],["Props",{"fg":6}],[").                                  ",{}]],"19":[[" some_module.erl                                        erlang  ------********* ",{"fg":59,"bg":235}]]},"cursor":{"x":0,"y":3}}],[8.6e-05,{"cursor":{"visible":true}}],[1.189548,{"lines":{"3":[[" ",{}],["      reverse(List1) -> List2",{"bg":7}],["                                                  ",{}]],"9":[[" ",{"fg":63,"bg":235}],["V-LINE",{"fg":63,"bg":235,"bold":true}],["  [ref-erlang:lists:reverse][-] ",{"fg":63,"bg":235}],["RO",{"fg":196,"bg":235}],["           ref-erlang  ---------*----- ",{"fg":63,"bg":235}]]},"cursor":{"x":80,"y":9,"visible":false}}],[0.000773,{"lines":{"22":[["-- VISUAL LINE --",{"bold":true}],["                                                               ",{}]]},"cursor":{"x":0,"y":3,"visible":true}}],[0.297254,{"lines":{"3":[["       reverse(List1) -> List2",{"bg":7}],["                                                  ",{}]]},"cursor":{"y":4}}],[0.182779,{"lines":{"5":[[" ",{}],["             Types:",{"bg":7}],["                                                            ",{}]]},"cursor":{"y":5}}],[0.166922,{"lines":{"0":[["                                                                                ",{}]],"2":[["       reverse(List1) -> List2",{"bg":7}],["                                                  ",{}]],"3":[["                                                                                ",{}]],"4":[["              Types:",{"bg":7}],["                                                            ",{}]],"5":[["                                                                                ",{}]],"6":[["                 List1 = List2 = [T]                                            ",{}]],"7":[["                 T = term()                                                     ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.001068,{"cursor":{"x":0,"y":5,"visible":true}}],[0.183081,{"lines":{"1":[["       reverse(List1) -> List2",{"bg":7}],["                                                  ",{}]],"2":[["                                                                                ",{}]],"3":[["              Types:",{"bg":7}],["                                                            ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["                List1 = List2 = [T]",{"bg":7}],["                                            ",{}]],"6":[["                 T = term()                                                     ",{}]],"7":[["                                                                                ",{}]],"8":[["              Returns a list with the elements in List1 in reverse order.       ",{}]]},"cursor":{"x":73,"y":8,"visible":false}}],[0.001114,{"cursor":{"x":0,"y":5,"visible":true}}],[0.174817,{"lines":{"0":[["       reverse(List1) -> List2",{"bg":7}],["                                                  ",{}]],"1":[["                                                                                ",{}]],"2":[["              Types:",{"bg":7}],["                                                            ",{}]],"3":[["                                                                                ",{}]],"4":[["                 List1 = List2 = [T]",{"bg":7}],["                                            ",{}]],"5":[[" ",{}],["                T = term()",{"bg":7}],["                                                     ",{}]],"6":[["                                                                                ",{}]],"7":[["              Returns a list with the elements in List1 in reverse order.       ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":27,"visible":false}}],[0.001139,{"cursor":{"x":0,"visible":true}}],[0.190088,{"lines":{"0":[["                                                                                ",{}]],"1":[["              Types:",{"bg":7}],["                                                            ",{}]],"2":[["                                                                                ",{}]],"3":[["                 List1 = List2 = [T]",{"bg":7}],["                                            ",{}]],"4":[["                 T = term()",{"bg":7}],["                                                     ",{}]],"5":[["                                                                                ",{}]],"6":[["              Returns a list with the elements in List1 in reverse order.       ",{}]],"7":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.000851,{"cursor":{"x":0,"y":5,"visible":true}}],[0.223864,{"lines":{"0":[["              Types:",{"bg":7}],["                                                            ",{}]],"1":[["                                                                                ",{}]],"2":[["                 List1 = List2 = [T]",{"bg":7}],["                                            ",{}]],"3":[["                 T = term()",{"bg":7}],["                                                     ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["             Returns a list with the elements in List1 in reverse order.",{"bg":7}],["       ",{}]],"6":[["                                                                                ",{}]],"8":[["       reverse(List1, Tail) -> List2                                            ",{}]]},"cursor":{"x":36,"y":8,"visible":false}}],[0.00106,{"cursor":{"x":0,"y":5,"visible":true}}],[0.310979,{"lines":{"0":[["                                                                                ",{}]],"1":[["                 List1 = List2 = [T]",{"bg":7}],["                                            ",{}]],"2":[["                 T = term()",{"bg":7}],["                                                     ",{}]],"3":[["                                                                                ",{}]],"4":[["              Returns a list with the elements in List1 in reverse order.",{"bg":7}],["       ",{}]],"5":[["                                                                                ",{}]],"7":[["       reverse(List1, Tail) -> List2                                            ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.001059,{"cursor":{"x":0,"y":5,"visible":true}}],[0.206876,{"lines":{"0":[["                 List1 = List2 = [T]",{"bg":7}],["                                            ",{}]],"1":[["                 T = term()",{"bg":7}],["                                                     ",{}]],"2":[["                                                                                ",{}]],"3":[["              Returns a list with the elements in List1 in reverse order.",{"bg":7}],["       ",{}]],"4":[["                                                                                ",{}]],"6":[["       reverse(List1, Tail) -> List2                                            ",{}]],"7":[["                                                                                ",{}]],"8":[["              Types:                                                            ",{}]]},"cursor":{"x":20,"y":8,"visible":false}}],[0.001088,{"cursor":{"x":0,"y":5,"visible":true}}],[0.367905,{"lines":{"0":[["                 List1 = List2 = [T]                                            ",{}]],"1":[["                 T = term()                                                     ",{}]],"3":[["              Returns a list with the elements in List1 in reverse order.       ",{}]],"5":[["                                                                                ",{"bg":234}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:lists:reverse][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["           ref-erlang  ---------*----- ",{"fg":188,"bg":235}]],"22":[["                                                                                ",{}]]}}],[0.582495,{"lines":{"20":[[":                                                                               ",{}]]},"cursor":{"x":1,"y":20}}],[0.167993,{"lines":{"20":[[":q                                                                              ",{}]]},"cursor":{"x":2}}],[0.152042,{"lines":{"20":[[":qa                                                                             ",{}]]},"cursor":{"x":3}}],[0.239918,{"lines":{"20":[[":qa!                                                                            ",{}]]},"cursor":{"x":4}}],[0.104067,{"cursor":{"x":0}}],[0.0461,{"lines":{"0":[["                                                                                ",{}]],"1":[["                                                                                ",{}]],"2":[["hq1@kosmos ",{"bg":4}],["~/blog_demo     ",{"fg":6,"bg":4}],["                                                     ",{"fg":1,"bg":4,"bold":true}]],"3":[["$ vim some_module.erl                                                           ",{}]],"5":[["                                                                                ",{}]],"6":[["                                                                                ",{}]],"8":[["                                                                                ",{}]],"9":[["                                                                                ",{}]],"10":[["                                                                                ",{}]],"11":[["                                                                                ",{}]],"12":[["                                                                                ",{}]],"13":[["                                                                                ",{}]],"14":[["                                                                                ",{}]],"15":[["                                                                                ",{}]],"16":[["                                                                                ",{}]],"17":[["                                                                                ",{}]],"18":[["                                                                                ",{}]],"19":[["                                                                                ",{}]],"20":[["                                                                                ",{}]]},"cursor":{"y":22}}],[0.001921,{}],[0.01889,{"lines":{"0":[["$ vim some_module.erl                                                           ",{}]],"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]],"21":[["hq1@kosmos ",{"bg":4}],["~/blog_demo     ",{"fg":6,"bg":4}],["                                                     ",{"fg":1,"bg":4,"bold":true}]],"22":[["$                                                                               ",{}]]},"cursor":{"x":2}}],[0.477138,{"lines":{"0":[["                                                                                ",{}]],"20":[["hq1@kosmos ",{"bg":4}],["~/blog_demo     ",{"fg":6,"bg":4}],["                                                     ",{"fg":1,"bg":4,"bold":true}]],"21":[["$                                                                               ",{}]],"22":[["                                                                                ",{}]]},"cursor":{"x":0}}]]