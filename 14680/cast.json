[[0.113833,{"lines":{"0":[["                                                                                ",{}]],"1":[["                                                                                ",{}]],"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]],"4":[["                                                                                ",{}]],"5":[["                                                                                ",{}]],"6":[["                                                                                ",{}]],"7":[["                                                                                ",{}]],"8":[["                                                                                ",{}]],"9":[["                                                                                ",{}]],"10":[["                                                                                ",{}]],"11":[["                                                                                ",{}]],"12":[["                                                                                ",{}]],"13":[["                                                                                ",{}]],"14":[["                                                                                ",{}]],"15":[["                                                                                ",{}]],"16":[["                                                                                ",{}]],"17":[["                                                                                ",{}]],"18":[["                                                                                ",{}]],"19":[["                                                                                ",{}]],"20":[["                                                                                ",{}]],"21":[["                                                                                ",{}]],"22":[["                                                                                ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.025039,{"lines":{"2":[["hq1@kosmos ",{"bg":4}],["~/blog_demo     ",{"fg":6,"bg":4}],["                                                     ",{"fg":1,"bg":4,"bold":true}]],"3":[["$                                                                               ",{}]]},"cursor":{"x":2,"y":3}}],[0.218502,{"lines":{"3":[["$ v                                                                             ",{}]]},"cursor":{"x":3}}],[0.102822,{"lines":{"3":[["$ vi                                                                            ",{}]]},"cursor":{"x":4}}],[0.184356,{"lines":{"3":[["$ vim                                                                           ",{}]]},"cursor":{"x":5}}],[0.04812,{"cursor":{"x":6}}],[0.063681,{"lines":{"3":[["$ vim s                                                                         ",{}]]},"cursor":{"x":7}}],[0.08798400000000001,{"lines":{"3":[["$ vim so                                                                        ",{}]]},"cursor":{"x":8}}],[0.056025,{"lines":{"3":[["$ vim som                                                                       ",{}]]},"cursor":{"x":9}}],[0.084022,{"lines":{"3":[["$ vim some_module.erl",{}],[" ",{"bold":true}],["                                                          ",{}]]},"cursor":{"x":22}}],[0.365098,{"lines":{"3":[["$ vim some_module.erl                                                           ",{}]]},"cursor":{"x":0,"y":4}}],[0.049208,{"lines":{"4":[["Error detected while processing /Users/hq1/.vimrc:                              ",{}]],"5":[["line   62:                                                                      ",{}]]},"cursor":{"x":10,"y":5,"visible":false}}],[2.8e-05,{"lines":{"6":[["E185: Cannot find color scheme 'tango'                                          ",{}]]},"cursor":{"x":38,"y":6}}],[0.029041,{"cursor":{"y":22,"visible":true}}],[0.01291,{}],[0.013226,{"lines":{"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]],"4":[["                                                                                ",{}]],"5":[["                                                                                ",{}]],"6":[["                                                                                ",{}]]}}],[0.069725,{"lines":{"22":[["Press ENTER or type command to continue                                         ",{}]]},"cursor":{"x":39}}],[1.008221,{"lines":{"22":[["\"some_module.erl\"                                                               ",{}]]},"cursor":{"x":17,"visible":false}}],[2.5e-05,{"lines":{"22":[["\"some_module.erl\" 7L, 159C                                                      ",{}]]},"cursor":{"x":26}}],[0.03172,{}],[0.010852,{}],[0.022466,{}],[0.049793,{"lines":{"0":[["  6 -module",{"fg":11}],["(",{}],["some_module",{"fg":13}],[").                                                       ",{}]],"1":[["  5 ",{"fg":11}],["                                                                            ",{}]],"2":[["  4 -export",{"fg":11}],["(",{}],["[",{"fg":224}],["demo_time",{}],["/",{"fg":11}],["0",{"fg":13}],["]",{"fg":224}],[").                                                     ",{}]],"3":[["  3 ",{"fg":11}],["                                                                            ",{}]],"4":[["  2 ",{"fg":11}],["demo_time() ",{}],["->",{"fg":11}],["                                                              ",{}]],"5":[["  1 ",{"fg":11}],["    ",{}],["Props",{"fg":14,"bold":true}],[" ",{}],["=",{"fg":11}],[" application:get_env(",{}],["some_app",{"fg":13}],[", ",{}],["some_key",{"fg":13}],["),                        ",{}]],"6":[["  0 ",{"fg":11}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":13,"bg":234}],[", ",{"bg":234}],["Props",{"fg":14,"bg":234,"bold":true}],[").                                  ",{"bg":234}]],"7":[["~                                                                               ",{"fg":12}]],"8":[["~                                                                               ",{"fg":12}]],"9":[["~                                                                               ",{"fg":12}]],"10":[["~                                                                               ",{"fg":12}]],"11":[["~                                                                               ",{"fg":12}]],"12":[["~                                                                               ",{"fg":12}]],"13":[["~                            ",{"fg":12}],["                                                   ",{}]]},"cursor":{"x":29,"y":13}}],[7.4e-05,{"lines":{"13":[["~                                                                               ",{"fg":12}]],"14":[["~                                                                               ",{"fg":12}]],"15":[["~                                                                               ",{"fg":12}]],"16":[["~                                                                               ",{"fg":12}]],"17":[["~                                                                               ",{"fg":12}]],"18":[["~                                                                               ",{"fg":12}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":18,"y":6,"visible":true}}],[0.79057,{"lines":{"0":[["  5 -module",{"fg":11}],["(",{}],["some_module",{"fg":13}],[").                                                       ",{}]],"1":[["  4 ",{"fg":11}],["                                                                            ",{}]],"2":[["  3 -export",{"fg":11}],["(",{}],["[",{"fg":224}],["demo_time",{}],["/",{"fg":11}],["0",{"fg":13}],["]",{"fg":224}],[").                                                     ",{}]],"3":[["  2 ",{"fg":11}],["                                                                            ",{}]],"4":[["  1 ",{"fg":11}],["demo_time() ",{}],["->",{"fg":11}],["                                                              ",{}]],"5":[["  0 ",{"fg":11}],["    ",{"bg":234}],["Props",{"fg":14,"bg":234,"bold":true}],[" ",{"bg":234}],["=",{"fg":11,"bg":234}],[" application:get_env(",{"bg":234}],["some_app",{"fg":13,"bg":234}],[", ",{"bg":234}],["some_key",{"fg":13,"bg":234}],["),                        ",{"bg":234}]],"6":[["  1 ",{"fg":11}],["    proplists:get_value(",{}],["some_prop",{"fg":13}],[", ",{}],["Props",{"fg":14,"bold":true}],[").                                  ",{}]]},"cursor":{"y":5}}],[0.399237,{"cursor":{"x":8}}],[0.417112,{"cursor":{"x":14}}],[0.191957,{"cursor":{"x":16}}],[0.167157,{"cursor":{"x":27}}],[0.233273,{"cursor":{"x":28}}],[0.530435,{"cursor":{"visible":false}}],[0.060546,{}],[0.049838,{"lines":{"0":[["              returns undefined.                                                ",{}]],"1":[["                                                                                ",{}]],"2":[["                                                                                ",{}]],"3":[["       get_env(Par) -> undefined | {ok, Val}                                    ",{"bg":234}]],"4":[["                                                                                ",{}]],"5":[["       get_env(Application, Par) -> undefined | {ok, Val}                       ",{}]],"6":[["                                                                                ",{}]],"7":[["              Types:                                                            ",{}]],"8":[["                                                                                ",{}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:application:get_env][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  --*------------ ",{"fg":188,"bg":235}]],"10":[["  3 -export",{"fg":11}],["(",{}],["[",{"fg":224}],["demo_time",{}],["/",{"fg":11}],["0",{"fg":13}],["]",{"fg":224}],[").                                                     ",{}]],"11":[["  2 ",{"fg":11}],["                                                                            ",{}]],"12":[["  1 ",{"fg":11}],["demo_time() ",{}],["->",{"fg":11}],["                                                              ",{}]],"13":[["  0 ",{"fg":11}],["    ",{}],["Props",{"fg":14,"bold":true}],[" ",{}],["=",{"fg":11}],[" application:get_env(",{}],["some_app",{"fg":13}],[", ",{}],["some_key",{"fg":13}],["),                        ",{}]],"14":[["  1 ",{"fg":11}],["    proplists:get_value(",{}],["some_prop",{"fg":13}],[", ",{}],["Props",{"fg":14,"bold":true}],[").                                  ",{}]],"19":[[" some_module.erl                                        erlang  ----**********",{"fg":59,"bg":235}],["* ",{"fg":188,"bg":235}]]},"cursor":{"x":78,"y":19}}],[4.3e-05,{"lines":{"19":[[" some_module.erl                                        erlang  ----*********** ",{"fg":59,"bg":235}]]},"cursor":{"x":0,"y":3,"visible":true}}],[1.020991,{"lines":{"3":[[" ",{}],["      get_env(Par) -> undefined | {ok, Val}",{"bg":242}],["                                    ",{}]],"9":[[" ",{"fg":63,"bg":235}],["V-LINE",{"fg":63,"bg":235,"bold":true}],["  [ref-erlang:application:get_env][-] ",{"fg":63,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  --*------------ ",{"fg":63,"bg":235}]]},"cursor":{"x":80,"y":9,"visible":false}}],[0.001015,{"lines":{"22":[["-- VISUAL LINE --",{"bold":true}],["                                                               ",{}]]},"cursor":{"x":0,"y":3,"visible":true}}],[0.320118,{"lines":{"3":[["       get_env(Par) -> undefined | {ok, Val}",{"bg":242}],["                                    ",{}]]},"cursor":{"y":4}}],[0.169259,{"lines":{"5":[[" ",{}],["      get_env(Application, Par) -> undefined | {ok, Val}",{"bg":242}],["                       ",{}]]},"cursor":{"y":5}}],[0.174279,{"lines":{"0":[["                                                                                ",{}]],"2":[["       get_env(Par) -> undefined | {ok, Val}",{"bg":242}],["                                    ",{}]],"3":[["                                                                                ",{}]],"4":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"bg":242}],["                       ",{}]],"5":[["                                                                                ",{}]],"6":[["              Types:                                                            ",{}]],"7":[["                                                                                ",{}]],"8":[["                 Application = Par = atom()                                     ",{}]]},"cursor":{"x":43,"y":8,"visible":false}}],[0.001048,{"cursor":{"x":0,"y":5,"visible":true}}],[0.182979,{"lines":{"1":[["       get_env(Par) -> undefined | {ok, Val}",{"bg":242}],["                                    ",{}]],"2":[["                                                                                ",{}]],"3":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"bg":242}],["                       ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["             Types:",{"bg":242}],["                                                            ",{}]],"6":[["                                                                                ",{}]],"7":[["                 Application = Par = atom()                                     ",{}]],"8":[["                 Val = term()                                                   ",{}]]},"cursor":{"x":29,"y":8,"visible":false}}],[0.001025,{"cursor":{"x":0,"y":5,"visible":true}}],[0.174979,{"lines":{"0":[["       get_env(Par) -> undefined | {ok, Val}",{"bg":242}],["                                    ",{}]],"1":[["                                                                                ",{}]],"2":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"bg":242}],["                       ",{}]],"3":[["                                                                                ",{}]],"4":[["              Types:",{"bg":242}],["                                                            ",{}]],"5":[["                                                                                ",{}]],"6":[["                 Application = Par = atom()                                     ",{}]],"7":[["                 Val = term()                                                   ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.001107,{"cursor":{"x":0,"y":5,"visible":true}}],[0.190928,{"lines":{"0":[["                                                                                ",{}]],"1":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"bg":242}],["                       ",{}]],"2":[["                                                                                ",{}]],"3":[["              Types:",{"bg":242}],["                                                            ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["                Application = Par = atom()",{"bg":242}],["                                     ",{}]],"6":[["                 Val = term()                                                   ",{}]],"7":[["                                                                                ",{}]],"8":[["              Returns the value of the configuration parameter Par for  Appli-  ",{}]]},"cursor":{"x":78,"y":8,"visible":false}}],[0.001071,{"cursor":{"x":0,"y":5,"visible":true}}],[0.190117,{"lines":{"0":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"bg":242}],["                       ",{}]],"1":[["                                                                                ",{}]],"2":[["              Types:",{"bg":242}],["                                                            ",{}]],"3":[["                                                                                ",{}]],"4":[["                 Application = Par = atom()",{"bg":242}],["                                     ",{}]],"5":[[" ",{}],["                Val = term()",{"bg":242}],["                                                   ",{}]],"6":[["                                                                                ",{}]],"7":[["              Returns the value of the configuration parameter Par for  Appli-  ",{}]],"8":[["              cation.  If  the application argument is omitted, it defaults to  ",{}]]},"cursor":{"x":78,"y":8,"visible":false}}],[0.000565,{"cursor":{"x":0,"y":5,"visible":true}}],[0.216255,{"lines":{"0":[["                                                                                ",{}]],"1":[["              Types:",{"bg":242}],["                                                            ",{}]],"2":[["                                                                                ",{}]],"3":[["                 Application = Par = atom()",{"bg":242}],["                                     ",{}]],"4":[["                 Val = term()",{"bg":242}],["                                                   ",{}]],"5":[["                                                                                ",{}]],"6":[["              Returns the value of the configuration parameter Par for  Appli-  ",{}]],"7":[["              cation.  If  the application argument is omitted, it defaults to  ",{}]],"8":[["              the application of the calling process.                           ",{}]]},"cursor":{"x":53,"y":8,"visible":false}}],[0.00102,{"cursor":{"x":0,"y":5,"visible":true}}],[0.793859,{"lines":{"1":[["              Types:                                                            ",{}]],"3":[["                 Application = Par = atom()                                     ",{}]],"4":[["                 Val = term()                                                   ",{}]],"5":[["                                                                                ",{"bg":234}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:application:get_env][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  --*------------ ",{"fg":188,"bg":235}]],"22":[["                                                                                ",{}]]}}],[1.057223,{"lines":{"5":[["                                                                                ",{}]],"9":[[" [ref-erlang:application:get_env][-] RO             ref-erlang  --*------------ ",{"fg":59,"bg":235}]],"13":[["  0 ",{"fg":11}],["    ",{"bg":234}],["Props",{"fg":14,"bg":234,"bold":true}],[" ",{"bg":234}],["=",{"fg":11,"bg":234}],[" application:get_env(",{"bg":234}],["some_app",{"fg":13,"bg":234}],[", ",{"bg":234}],["some_key",{"fg":13,"bg":234}],["),                        ",{"bg":234}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  ----*********** ",{"fg":188,"bg":235}]]},"cursor":{"x":28,"y":13}}],[0.630309,{"lines":{"10":[["  4 -export",{"fg":11}],["(",{}],["[",{"fg":224}],["demo_time",{}],["/",{"fg":11}],["0",{"fg":13}],["]",{"fg":224}],[").                                                     ",{}]],"11":[["  3 ",{"fg":11}],["                                                                            ",{}]],"12":[["  2 ",{"fg":11}],["demo_time() ",{}],["->",{"fg":11}],["                                                              ",{}]],"13":[["  1 ",{"fg":11}],["    ",{}],["Props",{"fg":14,"bold":true}],[" ",{}],["=",{"fg":11}],[" application:get_env(",{}],["some_app",{"fg":13}],[", ",{}],["some_key",{"fg":13}],["),                        ",{}]],"14":[["  0 ",{"fg":11}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":13,"bg":234}],[", ",{"bg":234}],["Props",{"fg":14,"bg":234,"bold":true}],[").                                  ",{"bg":234}]]},"cursor":{"y":14}}],[0.81537,{"lines":{"14":[["  0 ",{"fg":11}],["    proplists:get_value",{"bg":234}],["(",{"bg":6}],["some_prop",{"fg":13,"bg":234}],[", ",{"bg":234}],["Props",{"fg":14,"bg":234,"bold":true}],[")",{"bg":6}],[".                                  ",{"bg":234}]]},"cursor":{"x":27}}],[0.398521,{"lines":{"14":[["  0 ",{"fg":11}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":13,"bg":234}],[", ",{"bg":234}],["Props",{"fg":14,"bg":234,"bold":true}],[").                                  ",{"bg":234}]]},"cursor":{"x":18}}],[0.943852,{"cursor":{"visible":false}}],[0.05559,{}],[0.024677,{"lines":{"0":[["              ing duplicates.                                                   ",{}]],"1":[["                                                                                ",{}]],"3":[["       get_value(Key, List) -> term()                                           ",{"bg":234}]],"4":[["                                                                                ",{}]],"5":[["              Types:                                                            ",{}]],"6":[["                                                                                ",{}]],"7":[["                 Key = term()                                                   ",{}]],"8":[["                 List = [term()]                                                ",{}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:proplists:get_value][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  ------*-------- ",{"fg":188,"bg":235}]],"14":[["  0 ",{"fg":11}],["    proplists:get_value(",{}],["some_prop",{"fg":13}],[", ",{}],["Props",{"fg":14,"bold":true}],[").                                  ",{}]],"19":[[" some_module.erl                                        erlang  ----*********** ",{"fg":59,"bg":235}]],"20":[["--No lines in buffer--                                                          ",{}]]},"cursor":{"x":22,"y":20}}],[0.000555,{"cursor":{"x":0,"y":3,"visible":true}}],[0.934723,{"lines":{"3":[[" ",{}],["      get_value(Key, List) -> term()",{"bg":242}],["                                           ",{}]],"9":[[" ",{"fg":63,"bg":235}],["V-LINE",{"fg":63,"bg":235,"bold":true}],["  [ref-erlang:proplists:get_value][-] ",{"fg":63,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  ------*-------- ",{"fg":63,"bg":235}]]},"cursor":{"x":80,"y":9,"visible":false}}],[0.000636,{"lines":{"22":[["-- VISUAL LINE --",{"bold":true}],["                                                               ",{}]]},"cursor":{"x":0,"y":3,"visible":true}}],[0.256941,{"lines":{"3":[["       get_value(Key, List) -> term()",{"bg":242}],["                                           ",{}]]},"cursor":{"y":4}}],[0.183463,{"lines":{"5":[[" ",{}],["             Types:",{"bg":242}],["                                                            ",{}]]},"cursor":{"y":5}}],[0.142817,{"lines":{"0":[["                                                                                ",{}]],"2":[["       get_value(Key, List) -> term()",{"bg":242}],["                                           ",{}]],"3":[["                                                                                ",{}]],"4":[["              Types:",{"bg":242}],["                                                            ",{}]],"5":[["                                                                                ",{}]],"6":[["                 Key = term()                                                   ",{}]],"7":[["                 List = [term()]                                                ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.001028,{"lines":{"20":[["                                                                                ",{}]]},"cursor":{"x":0,"y":5,"visible":true}}],[0.166327,{"lines":{"1":[["       get_value(Key, List) -> term()",{"bg":242}],["                                           ",{}]],"2":[["                                                                                ",{}]],"3":[["              Types:",{"bg":242}],["                                                            ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["                Key = term()",{"bg":242}],["                                                   ",{}]],"6":[["                 List = [term()]                                                ",{}]],"7":[["                                                                                ",{}]],"8":[["              Equivalent to get_value(Key, List, undefined).                    ",{}]]},"cursor":{"x":60,"y":8,"visible":false}}],[0.000575,{"cursor":{"x":0,"y":5,"visible":true}}],[0.152352,{"lines":{"0":[["       get_value(Key, List) -> term()",{"bg":242}],["                                           ",{}]],"1":[["                                                                                ",{}]],"2":[["              Types:",{"bg":242}],["                                                            ",{}]],"3":[["                                                                                ",{}]],"4":[["                 Key = term()",{"bg":242}],["                                                   ",{}]],"5":[[" ",{}],["                List = [term()]",{"bg":242}],["                                                ",{}]],"6":[["                                                                                ",{}]],"7":[["              Equivalent to get_value(Key, List, undefined).                    ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":32,"visible":false}}],[0.001005,{"cursor":{"x":0,"visible":true}}],[0.182727,{"lines":{"0":[["                                                                                ",{}]],"1":[["              Types:",{"bg":242}],["                                                            ",{}]],"2":[["                                                                                ",{}]],"3":[["                 Key = term()",{"bg":242}],["                                                   ",{}]],"4":[["                 List = [term()]",{"bg":242}],["                                                ",{}]],"5":[["                                                                                ",{}]],"6":[["              Equivalent to get_value(Key, List, undefined).                    ",{}]],"7":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.0011,{"cursor":{"x":0,"y":5,"visible":true}}],[0.18304,{"lines":{"0":[["              Types:",{"bg":242}],["                                                            ",{}]],"1":[["                                                                                ",{}]],"2":[["                 Key = term()",{"bg":242}],["                                                   ",{}]],"3":[["                 List = [term()]",{"bg":242}],["                                                ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["             Equivalent to get_value(Key, List, undefined).",{"bg":242}],["                    ",{}]],"6":[["                                                                                ",{}]],"8":[["       get_value(Key, List, Default) -> term()                                  ",{}]]},"cursor":{"x":46,"y":8,"visible":false}}],[0.001017,{"cursor":{"x":0,"y":5,"visible":true}}],[0.174285,{"lines":{"0":[["                                                                                ",{}]],"1":[["                 Key = term()",{"bg":242}],["                                                   ",{}]],"2":[["                 List = [term()]",{"bg":242}],["                                                ",{}]],"3":[["                                                                                ",{}]],"4":[["              Equivalent to get_value(Key, List, undefined).",{"bg":242}],["                    ",{}]],"5":[["                                                                                ",{}]],"7":[["       get_value(Key, List, Default) -> term()                                  ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.000671,{"cursor":{"x":0,"y":5,"visible":true}}],[0.264019,{"lines":{"0":[["                 Key = term()",{"bg":242}],["                                                   ",{}]],"1":[["                 List = [term()]",{"bg":242}],["                                                ",{}]],"2":[["                                                                                ",{}]],"3":[["              Equivalent to get_value(Key, List, undefined).",{"bg":242}],["                    ",{}]],"4":[["                                                                                ",{}]],"6":[["       get_value(Key, List, Default) -> term()                                  ",{}]],"7":[["                                                                                ",{}]],"8":[["              Types:                                                            ",{}]]},"cursor":{"x":20,"y":8,"visible":false}}],[0.001011,{"cursor":{"x":0,"y":5,"visible":true}}],[0.556067,{"lines":{"0":[["                 Key = term()                                                   ",{}]],"1":[["                 List = [term()]                                                ",{}]],"3":[["              Equivalent to get_value(Key, List, undefined).                    ",{}]],"5":[["                                                                                ",{"bg":234}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:proplists:get_value][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  ------*-------- ",{"fg":188,"bg":235}]],"22":[["                                                                                ",{}]]}}],[0.938151,{"lines":{"20":[[":bdelete                                                                        ",{}]]},"cursor":{"y":20,"visible":false}}],[0.021355,{"lines":{"0":[["  6 -module",{"fg":11}],["(",{}],["some_module",{"fg":13}],[").                                                       ",{}]],"1":[["  5 ",{"fg":11}],["                                                                            ",{}]],"2":[["  4 -export",{"fg":11}],["(",{}],["[",{"fg":224}],["demo_time",{}],["/",{"fg":11}],["0",{"fg":13}],["]",{"fg":224}],[").                                                     ",{}]],"3":[["  3 ",{"fg":11}],["                                                                            ",{}]],"4":[["  2 ",{"fg":11}],["demo_time() ",{}],["->",{"fg":11}],["                                                              ",{}]],"5":[["  1 ",{"fg":11}],["    ",{}],["Props",{"fg":14,"bold":true}],[" ",{}],["=",{"fg":11}],[" application:get_env(",{}],["some_app",{"fg":13}],[", ",{}],["some_key",{"fg":13}],["),                        ",{}]],"6":[["  0 ",{"fg":11}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":13,"bg":234}],[", ",{"bg":234}],["Props",{"fg":14,"bg":234,"bold":true}],[").                                  ",{"bg":234}]],"7":[["~                                                                               ",{"fg":12}]],"8":[["~                                                                               ",{"fg":12}]],"9":[["~                                                                               ",{"fg":12}]],"10":[["~                                                                               ",{"fg":12}]],"11":[["~                                                                               ",{"fg":12}]],"12":[["~                                         ",{"fg":12}],["                                      ",{}]]},"cursor":{"x":42,"y":12}}],[8.2e-05,{"lines":{"12":[["~                                                                               ",{"fg":12}]],"13":[["~                                                                               ",{"fg":12}]],"14":[["~                                                                               ",{"fg":12}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":18,"y":6,"visible":true}}],[1.538624,{"lines":{"20":[[":                                                                               ",{}]]},"cursor":{"x":1,"y":20,"visible":false}}],[3e-05,{"lines":{"20":[[":Unite ref/erlang -vertical -default-action=split                               ",{}]]},"cursor":{"x":0}}],[0.070636,{"lines":{"22":[["-- INSERT --",{"bold":true}],["                                                                    ",{}]]},"cursor":{"x":12,"y":22}}],[0.010723,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":14,"bold":true}],["                                                                            ",{}]],"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  CosEventChannelAdmin                                                        ",{"fg":242,"bg":0}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["CosEventChannelAdmin_ConsumerAdmin                                          ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["CosEventChannelAdmin_EventChannel                                           ",{}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["CosEventChannelAdmin_ProxyPullConsumer                                      ",{}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["CosEventChannelAdmin_ProxyPullSupplier                                      ",{}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["CosEventChannelAdmin_ProxyPushConsumer                                      ",{}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["CosEventChannelAdmin_ProxyPushSupplier                                      ",{}]],"8":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["CosEventChannelAdmin_SupplierAdmin                                          ",{}]],"9":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["CosEventDomainAdmin                                                         ",{}]],"10":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["CosEventDomainAdmin_EventDomain                                             ",{}]],"11":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["CosEventDomainAdmin_EventDomainFactory                                      ",{}]],"12":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["CosFileTransfer_Directory                                                   ",{}]],"13":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["CosFileTransfer_File                                                        ",{}]],"14":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["CosFileTransfer_FileIterator                                                ",{}]],"15":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["CosFileTransfer_FileTransferSession                                         ",{}]],"16":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["CosFileTransfer_VirtualFileSystem                                           ",{}]],"17":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["CosNaming                                                                   ",{}]],"18":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["CosNaming_BindingIterator                                                   ",{}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(30/628)                         [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"x":4,"y":0,"visible":true}}],[0.926681,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":14,"bold":true}],["l                                                                           ",{}]]},"cursor":{"x":5,"visible":false}}],[0.003545,{"lines":{"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["l",{"fg":242,"bg":0,"bold":true}],["cnt                                                                        ",{"fg":242,"bg":0}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["l",{"fg":14,"bold":true}],["eex                                                                        ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["l",{"fg":14,"bold":true}],["ib                                                                         ",{}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["l",{"fg":14,"bold":true}],["ists                                                                       ",{}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["l",{"fg":14,"bold":true}],["name                                                                       ",{}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["l",{"fg":14,"bold":true}],["name_component                                                             ",{}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["l",{"fg":14,"bold":true}],["og_mf_h                                                                    ",{}]],"8":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"9":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"10":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"11":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"12":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"13":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"14":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"15":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"16":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"17":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"18":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(7)                              [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"visible":true}}],[0.116989,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":14,"bold":true}],["li                                                                          ",{}]]},"cursor":{"x":6,"visible":false}}],[0.002877,{"lines":{"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["li",{"fg":242,"bg":0,"bold":true}],["b                                                                         ",{"fg":242,"bg":0}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["li",{"fg":14,"bold":true}],["sts                                                                       ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(2)                              [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"visible":true}}],[0.110129,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":14,"bold":true}],["lis                                                                         ",{}]],"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["lis",{"fg":242,"bg":0,"bold":true}],["ts                                                                       ",{"fg":242,"bg":0}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(1)                              [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"x":7}}],[0.127935,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":14,"bold":true}],["list                                                                        ",{}]],"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["list",{"fg":242,"bg":0,"bold":true}],["s                                                                       ",{"fg":242,"bg":0}]]},"cursor":{"x":8}}],[0.079999,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":14,"bold":true}],["lists                                                                       ",{}]],"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["lists",{"fg":242,"bg":0,"bold":true}],["                                                                       ",{"fg":242,"bg":0}]]},"cursor":{"x":9}}],[0.216762,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":14,"bold":true}],["lists:                                                                      ",{}]],"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["lists:",{"fg":242,"bg":0,"bold":true}],["all                                                                   ",{"fg":242,"bg":0}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["lists:",{"fg":14,"bold":true}],["any                                                                   ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["lists:",{"fg":14,"bold":true}],["append                                                                ",{}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["lists:",{"fg":14,"bold":true}],["concat                                                                ",{}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["lists:",{"fg":14,"bold":true}],["delete                                                                ",{}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["lists:",{"fg":14,"bold":true}],["dropwhile                                                             ",{}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["lists:",{"fg":14,"bold":true}],["duplicate                                                             ",{}]],"8":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["lists:",{"fg":14,"bold":true}],["filter                                                                ",{}]],"9":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["lists:",{"fg":14,"bold":true}],["filtermap                                                             ",{}]],"10":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["lists:",{"fg":14,"bold":true}],["flatlength        ",{}],["                                                    ",{"fg":12}]]},"cursor":{"x":28,"y":10,"visible":false}}],[4.2e-05,{"lines":{"10":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["lists:",{"fg":14,"bold":true}],["flatlength                                                            ",{}]],"11":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["lists:",{"fg":14,"bold":true}],["flatmap                                                               ",{}]],"12":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["lists:",{"fg":14,"bold":true}],["flatten                                                               ",{}]],"13":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["lists:",{"fg":14,"bold":true}],["foldl                                                                 ",{}]],"14":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["lists:",{"fg":14,"bold":true}],["foldr                                                                 ",{}]],"15":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["lists:",{"fg":14,"bold":true}],["foreach                                                               ",{}]],"16":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["lists:",{"fg":14,"bold":true}],["keydelete                                                             ",{}]],"17":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["lists:",{"fg":14,"bold":true}],["keyfind                                                               ",{}]],"18":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":224}],["lists:",{"fg":14,"bold":true}],["keymap                                                                ",{}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(30/59)                          [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"x":10,"y":0,"visible":true}}],[0.081651,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":14,"bold":true}],["lists:r                                                                     ",{}]]},"cursor":{"x":11,"visible":false}}],[0.003315,{"lines":{"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["lists:r",{"fg":242,"bg":0,"bold":true}],["everse                                                               ",{"fg":242,"bg":0}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"8":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"9":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"10":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"11":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"12":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"13":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"14":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"15":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"16":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"17":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"18":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(1)                              [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"visible":true}}],[0.176409,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":14,"bold":true}],["lists:re                                                                    ",{}]],"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["lists:re",{"fg":242,"bg":0,"bold":true}],["verse                                                               ",{"fg":242,"bg":0}]]},"cursor":{"x":12}}],[0.124187,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":14,"bold":true}],["lists:rev                                                                   ",{}]],"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["lists:rev",{"fg":242,"bg":0,"bold":true}],["erse                                                               ",{"fg":242,"bg":0}]]},"cursor":{"x":13}}],[0.09209000000000001,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":14,"bold":true}],["lists:reve                                                                  ",{}]],"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["lists:reve",{"fg":242,"bg":0,"bold":true}],["rse                                                               ",{"fg":242,"bg":0}]]},"cursor":{"x":14}}],[0.159242,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":14,"bold":true}],["lists:rever                                                                 ",{}]],"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["lists:rever",{"fg":242,"bg":0,"bold":true}],["se                                                               ",{"fg":242,"bg":0}]]},"cursor":{"x":15}}],[0.248684,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":14,"bold":true}],["lists:revers                                                                ",{}]],"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["lists:revers",{"fg":242,"bg":0,"bold":true}],["e                                                               ",{"fg":242,"bg":0}]]},"cursor":{"x":16}}],[0.615931,{"lines":{"20":[["                                                                                ",{}]],"22":[["                                                                                ",{}]]},"cursor":{"x":0,"y":22,"visible":false}}],[0.007978000000000001,{"lines":{"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(1)                              [unite] - default ",{"fg":188,"bg":235}]]},"cursor":{"x":15,"y":0,"visible":true}}],[0.012976,{"cursor":{"visible":false}}],[0.015779,{"lines":{"0":[["  6 -module",{"fg":11}],["(",{}],["some_module",{"fg":13}],[").                                                       ",{}]],"1":[["  5 ",{"fg":11}],["                                                                            ",{}]],"2":[["  4 -export",{"fg":11}],["(",{}],["[",{"fg":224}],["demo_time",{}],["/",{"fg":11}],["0",{"fg":13}],["]",{"fg":224}],[").                                                     ",{}]],"3":[["  3 ",{"fg":11}],["                                                                            ",{}]],"4":[["  2 ",{"fg":11}],["demo_time() ",{}],["->",{"fg":11}],["                                                              ",{}]],"5":[["  1 ",{"fg":11}],["    ",{}],["Props",{"fg":14,"bold":true}],[" ",{}],["=",{"fg":11}],[" application:get_env(",{}],["some_app",{"fg":13}],[", ",{}],["some_key",{"fg":13}],["),                        ",{}]],"6":[["  0 ",{"fg":11}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":13,"bg":234}],[", ",{"bg":234}],["Props",{"fg":14,"bg":234,"bold":true}],[").                                  ",{"bg":234}]],"7":[["~                                                                               ",{"fg":12}]],"8":[["~                                                                               ",{"fg":12}]],"9":[["~                                                                               ",{"fg":12}]],"10":[["~                                                                               ",{"fg":12}]],"11":[["~                                                                               ",{"fg":12}]],"12":[["~                                                                               ",{"fg":12}]],"13":[["~                                                                               ",{"fg":12}]],"14":[["~                                                                               ",{"fg":12}]],"15":[["~                                                                               ",{"fg":12}]],"16":[["~                                                                               ",{"fg":12}]],"17":[["~                                                                               ",{"fg":12}]],"18":[["~                                                                               ",{"fg":12}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":79,"y":19}}],[0.066082,{}],[0.042181,{}],[0.011062,{}],[0.011843,{}],[0.011905,{}],[0.045443,{"lines":{"0":[["              Returns true if List1 is a prefix of List2, otherwise false.      ",{}]],"1":[["                                                                                ",{}]],"2":[["                                                                                ",{}]],"3":[["       reverse(List1) -> List2                                                  ",{"bg":234}]],"4":[["                                                                                ",{}]],"5":[["              Types:                                                            ",{}]],"6":[["                                                                                ",{}]],"7":[["                 List1 = List2 = [T]                                            ",{}]],"8":[["                 T = term()                                                     ",{}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:lists:reverse][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["           ref-erlang  ---------*----- ",{"fg":188,"bg":235}]],"10":[["  3 ",{"fg":11}],["                                                                            ",{}]],"11":[["  2 ",{"fg":11}],["demo_time() ",{}],["->",{"fg":11}],["                                                              ",{}]],"12":[["  1 ",{"fg":11}],["    ",{}],["Props",{"fg":14,"bold":true}],[" ",{}],["=",{"fg":11}],[" application:get_env(",{}],["some_app",{"fg":13}],[", ",{}],["some_key",{"fg":13}],["),                        ",{}]],"13":[["  0 ",{"fg":11}],["    proplists:get_value(",{}],["some_prop",{"fg":13}],[", ",{}],["Props",{"fg":14,"bold":true}],[").                                  ",{}]],"19":[[" some_module.erl                                        erlang  ------********* ",{"fg":59,"bg":235}]]},"cursor":{"x":0,"y":3,"visible":true}}],[0.975527,{"lines":{"3":[[" ",{}],["      reverse(List1) -> List2",{"bg":242}],["                                                  ",{}]],"9":[[" ",{"fg":63,"bg":235}],["V-LINE",{"fg":63,"bg":235,"bold":true}],["  [ref-erlang:lists:reverse][-] ",{"fg":63,"bg":235}],["RO",{"fg":196,"bg":235}],["           ref-erlang  ---------*----- ",{"fg":63,"bg":235}]]},"cursor":{"x":80,"y":9,"visible":false}}],[0.000645,{"lines":{"22":[["-- VISUAL LINE --",{"bold":true}],["                                                               ",{}]]},"cursor":{"x":0,"y":3,"visible":true}}],[0.305228,{"lines":{"3":[["       reverse(List1) -> List2",{"bg":242}],["                                                  ",{}]]},"cursor":{"y":4}}],[0.173562,{"lines":{"5":[[" ",{}],["             Types:",{"bg":242}],["                                                            ",{}]]},"cursor":{"y":5}}],[0.168295,{"lines":{"0":[["                                                                                ",{}]],"2":[["       reverse(List1) -> List2",{"bg":242}],["                                                  ",{}]],"3":[["                                                                                ",{}]],"4":[["              Types:",{"bg":242}],["                                                            ",{}]],"5":[["                                                                                ",{}]],"6":[["                 List1 = List2 = [T]                                            ",{}]],"7":[["                 T = term()                                                     ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.001043,{"cursor":{"x":0,"y":5,"visible":true}}],[0.158443,{"lines":{"1":[["       reverse(List1) -> List2",{"bg":242}],["                                                  ",{}]],"2":[["                                                                                ",{}]],"3":[["              Types:",{"bg":242}],["                                                            ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["                List1 = List2 = [T]",{"bg":242}],["                                            ",{}]],"6":[["                 T = term()                                                     ",{}]],"7":[["                                                                                ",{}]],"8":[["              Returns a list with the elements in List1 in reverse order.       ",{}]]},"cursor":{"x":73,"y":8,"visible":false}}],[0.000812,{"cursor":{"x":0,"y":5,"visible":true}}],[0.151818,{"lines":{"0":[["       reverse(List1) -> List2",{"bg":242}],["                                                  ",{}]],"1":[["                                                                                ",{}]],"2":[["              Types:",{"bg":242}],["                                                            ",{}]],"3":[["                                                                                ",{}]],"4":[["                 List1 = List2 = [T]",{"bg":242}],["                                            ",{}]],"5":[[" ",{}],["                T = term()",{"bg":242}],["                                                     ",{}]],"6":[["                                                                                ",{}]],"7":[["              Returns a list with the elements in List1 in reverse order.       ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":27,"visible":false}}],[0.001039,{"cursor":{"x":0,"visible":true}}],[0.167107,{"lines":{"0":[["                                                                                ",{}]],"1":[["              Types:",{"bg":242}],["                                                            ",{}]],"2":[["                                                                                ",{}]],"3":[["                 List1 = List2 = [T]",{"bg":242}],["                                            ",{}]],"4":[["                 T = term()",{"bg":242}],["                                                     ",{}]],"5":[["                                                                                ",{}]],"6":[["              Returns a list with the elements in List1 in reverse order.       ",{}]],"7":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.001056,{"cursor":{"x":0,"y":5,"visible":true}}],[0.174687,{"lines":{"0":[["              Types:",{"bg":242}],["                                                            ",{}]],"1":[["                                                                                ",{}]],"2":[["                 List1 = List2 = [T]",{"bg":242}],["                                            ",{}]],"3":[["                 T = term()",{"bg":242}],["                                                     ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["             Returns a list with the elements in List1 in reverse order.",{"bg":242}],["       ",{}]],"6":[["                                                                                ",{}]],"8":[["       reverse(List1, Tail) -> List2                                            ",{}]]},"cursor":{"x":36,"y":8,"visible":false}}],[0.001041,{"cursor":{"x":0,"y":5,"visible":true}}],[1.251493,{"lines":{"0":[["              Types:                                                            ",{}]],"2":[["                 List1 = List2 = [T]                                            ",{}]],"3":[["                 T = term()                                                     ",{}]],"5":[["              Returns a list with the elements in List1 in reverse order.       ",{"bg":234}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:lists:reverse][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["           ref-erlang  ---------*----- ",{"fg":188,"bg":235}]],"22":[["                                                                                ",{}]]}}],[0.514804,{"lines":{"20":[[":bdelete                                                                        ",{}]]},"cursor":{"y":20,"visible":false}}],[0.022122,{"lines":{"0":[["  6 -module",{"fg":11}],["(",{}],["some_module",{"fg":13}],[").                                                       ",{}]],"1":[["  5 ",{"fg":11}],["                                                                            ",{}]],"2":[["  4 -export",{"fg":11}],["(",{}],["[",{"fg":224}],["demo_time",{}],["/",{"fg":11}],["0",{"fg":13}],["]",{"fg":224}],[").                                                     ",{}]],"3":[["  3 ",{"fg":11}],["                                                                            ",{}]],"4":[["  2 ",{"fg":11}],["demo_time() ",{}],["->",{"fg":11}],["                                                              ",{}]],"5":[["  1 ",{"fg":11}],["    ",{}],["Props",{"fg":14,"bold":true}],[" ",{}],["=",{"fg":11}],[" application:get_env(",{}],["some_app",{"fg":13}],[", ",{}],["some_key",{"fg":13}],["),                        ",{}]],"6":[["  0 ",{"fg":11}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":13,"bg":234}],[", ",{"bg":234}],["Props",{"fg":14,"bg":234,"bold":true}],[").                                  ",{"bg":234}]],"7":[["~                                                                               ",{"fg":12}]],"8":[["~                                                                               ",{"fg":12}]],"9":[["~                                                                               ",{"fg":12}]],"10":[["~                                                                               ",{"fg":12}]],"11":[["~                                                                               ",{"fg":12}]],"12":[["~                                                                ",{"fg":12}],["               ",{}]]},"cursor":{"x":65,"y":12}}],[7.9e-05,{"lines":{"12":[["~                                                                               ",{"fg":12}]],"13":[["~                                                                               ",{"fg":12}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":18,"y":6,"visible":true}}],[0.473782,{"lines":{"20":[[":                                                                               ",{}]]},"cursor":{"x":1,"y":20}}],[0.096375,{"lines":{"20":[[":q                                                                              ",{}]]},"cursor":{"x":2}}],[0.191133,{"lines":{"20":[[":qa                                                                             ",{}]]},"cursor":{"x":3}}],[0.232366,{"lines":{"20":[[":qa!                                                                            ",{}]]},"cursor":{"x":4}}],[0.263998,{"cursor":{"x":0}}],[0.039599,{"lines":{"0":[["                                                                                ",{}]],"1":[["hq1@kosmos ",{"bg":4}],["~/blog_demo     ",{"fg":6,"bg":4}],["                                                     ",{"fg":1,"bg":4,"bold":true}]],"2":[["$ vim some_module.erl                                                           ",{}]],"3":[["Error detected while processing /Users/hq1/.vimrc:                              ",{}]],"4":[["line   62:                                                                      ",{}]],"5":[["E185: Cannot find color scheme 'tango'                                          ",{}]],"6":[["                                                                                ",{}]],"7":[["                                                                                ",{}]],"8":[["                                                                                ",{}]],"9":[["                                                                                ",{}]],"10":[["                                                                                ",{}]],"11":[["                                                                                ",{}]],"12":[["                                                                                ",{}]],"13":[["                                                                                ",{}]],"14":[["                                                                                ",{}]],"15":[["                                                                                ",{}]],"16":[["                                                                                ",{}]],"17":[["                                                                                ",{}]],"18":[["                                                                                ",{}]],"19":[["                                                                                ",{}]],"20":[["                                                                                ",{}]]},"cursor":{"y":22}}],[0.001951,{}],[0.021043,{"lines":{"0":[["Error detected while processing /Users/hq1/.vimrc:                              ",{}]],"1":[["line   62:                                                                      ",{}]],"2":[["E185: Cannot find color scheme 'tango'                                          ",{}]],"3":[["                                                                                ",{}]],"4":[["                                                                                ",{}]],"5":[["                                                                                ",{}]],"21":[["hq1@kosmos ",{"bg":4}],["~/blog_demo     ",{"fg":6,"bg":4}],["                                                     ",{"fg":1,"bg":4,"bold":true}]],"22":[["$                                                                               ",{}]]},"cursor":{"x":2}}],[0.753589,{"lines":{"22":[["$ vim some_module.erl                                                           ",{}]]},"cursor":{"x":21}}],[0.311966,{"lines":{"22":[["$                                                                               ",{}]]},"cursor":{"x":2}}],[0.223903,{"lines":{"0":[["line   62:                                                                      ",{}]],"1":[["E185: Cannot find color scheme 'tango'                                          ",{}]],"2":[["                                                                                ",{}]],"20":[["hq1@kosmos ",{"bg":4}],["~/blog_demo     ",{"fg":6,"bg":4}],["                                                     ",{"fg":1,"bg":4,"bold":true}]],"21":[["$                                                                               ",{}]],"22":[["                                                                                ",{}]]},"cursor":{"x":0}}]]