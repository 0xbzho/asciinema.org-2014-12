[[0.108642,{"lines":{"0":[["                                                                                ",{}]],"1":[["                                                                                ",{}]],"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]],"4":[["                                                                                ",{}]],"5":[["                                                                                ",{}]],"6":[["                                                                                ",{}]],"7":[["                                                                                ",{}]],"8":[["                                                                                ",{}]],"9":[["                                                                                ",{}]],"10":[["                                                                                ",{}]],"11":[["                                                                                ",{}]],"12":[["                                                                                ",{}]],"13":[["                                                                                ",{}]],"14":[["                                                                                ",{}]],"15":[["                                                                                ",{}]],"16":[["                                                                                ",{}]],"17":[["                                                                                ",{}]],"18":[["                                                                                ",{}]],"19":[["                                                                                ",{}]],"20":[["                                                                                ",{}]],"21":[["                                                                                ",{}]],"22":[["                                                                                ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.023973,{"lines":{"2":[["hq1@kosmos ",{"bg":4}],["~/blog_demo     ",{"fg":6,"bg":4}],["                                                     ",{"fg":1,"bg":4,"bold":true}]],"3":[["$                                                                               ",{}]]},"cursor":{"x":2,"y":3}}],[0.260556,{"lines":{"3":[["$ v                                                                             ",{}]]},"cursor":{"x":3}}],[0.09456000000000001,{"lines":{"3":[["$ vi                                                                            ",{}]]},"cursor":{"x":4}}],[0.18447,{"lines":{"3":[["$ vim                                                                           ",{}]]},"cursor":{"x":5}}],[0.056357,{"cursor":{"x":6}}],[0.055466,{"lines":{"3":[["$ vim s                                                                         ",{}]]},"cursor":{"x":7}}],[0.104202,{"lines":{"3":[["$ vim so                                                                        ",{}]]},"cursor":{"x":8}}],[0.049146,{"lines":{"3":[["$ vim som                                                                       ",{}]]},"cursor":{"x":9}}],[0.122602,{"lines":{"3":[["$ vim some_module.erl",{}],[" ",{"bold":true}],["                                                          ",{}]]},"cursor":{"x":22}}],[0.419998,{"lines":{"3":[["$ vim some_module.erl                                                           ",{}]]},"cursor":{"x":0,"y":4}}],[0.07738299999999999,{"cursor":{"y":22}}],[0.013053,{}],[0.012885,{"lines":{"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]]}}],[0.06372800000000001,{}],[0.000171,{"lines":{"20":[["\"some_module.erl\" 7L, 159C                                                      ",{}]]},"cursor":{"x":26,"y":20,"visible":false}}],[0.035108,{}],[0.011225,{}],[0.023142,{}],[0.031963,{"lines":{"0":[["  6 ",{"fg":11}],["-module",{"fg":10}],["(",{}],["some_module",{"fg":130}],[").                                                       ",{}]],"1":[["  5 ",{"fg":11}],["                                                                            ",{}]],"2":[["  4 ",{"fg":11}],["-export",{"fg":10}],["(",{}],["[",{"fg":13}],["demo_time",{}],["/",{"fg":10}],["0",{"fg":4}],["]",{"fg":13}],[").                                                     ",{}]],"3":[["  3 ",{"fg":11}],["                                                                            ",{}]],"4":[["  2 ",{"fg":11}],["demo_time() ",{}],["->",{"fg":10}],["                                                              ",{}]],"5":[["  1 ",{"fg":11}],["    ",{}],["Props",{"fg":2,"bold":true}],[" ",{}],["=",{"fg":10}],[" application:get_env(",{}],["some_app",{"fg":130}],[", ",{}],["some_key",{"fg":130}],["),                        ",{}]],"6":[["  0 ",{"fg":11}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":130,"bg":234}],[", ",{"bg":234}],["Props",{"fg":2,"bg":234,"bold":true}],[").                                  ",{"bg":234}]],"7":[["~                                                                               ",{"fg":242}]],"8":[["~                                                                               ",{"fg":242}]],"9":[["~                                                                               ",{"fg":242}]],"10":[["~                                                                               ",{"fg":242}]],"11":[["~                                                                               ",{"fg":242}]],"12":[["~                                                                      ",{"fg":242}],["         ",{}]]},"cursor":{"x":71,"y":12}}],[6.3e-05,{"lines":{"12":[["~                                                                               ",{"fg":242}]],"13":[["~                                                                               ",{"fg":242}]],"14":[["~                                                                               ",{"fg":242}]],"15":[["~                                                                               ",{"fg":242}]],"16":[["~                                                                               ",{"fg":242}]],"17":[["~                                                                               ",{"fg":242}]],"18":[["~                                                                               ",{"fg":242}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":18,"y":6,"visible":true}}],[1.028452,{"lines":{"0":[["  5 ",{"fg":11}],["-module",{"fg":10}],["(",{}],["some_module",{"fg":130}],[").                                                       ",{}]],"1":[["  4 ",{"fg":11}],["                                                                            ",{}]],"2":[["  3 ",{"fg":11}],["-export",{"fg":10}],["(",{}],["[",{"fg":13}],["demo_time",{}],["/",{"fg":10}],["0",{"fg":4}],["]",{"fg":13}],[").                                                     ",{}]],"3":[["  2 ",{"fg":11}],["                                                                            ",{}]],"4":[["  1 ",{"fg":11}],["demo_time() ",{}],["->",{"fg":10}],["                                                              ",{}]],"5":[["  0 ",{"fg":11}],["    ",{"bg":234}],["Props",{"fg":2,"bg":234,"bold":true}],[" ",{"bg":234}],["=",{"fg":10,"bg":234}],[" application:get_env(",{"bg":234}],["some_app",{"fg":130,"bg":234}],[", ",{"bg":234}],["some_key",{"fg":130,"bg":234}],["),                        ",{"bg":234}]],"6":[["  1 ",{"fg":11}],["    proplists:get_value(",{}],["some_prop",{"fg":130}],[", ",{}],["Props",{"fg":2,"bold":true}],[").                                  ",{}]]},"cursor":{"y":5}}],[0.584264,{"cursor":{"x":27}}],[0.32804,{"cursor":{"x":28}}],[0.762916,{"cursor":{"visible":false}}],[0.057463,{}],[0.053374,{"lines":{"0":[["              returns undefined.                                                ",{}]],"1":[["                                                                                ",{}]],"2":[["                                                                                ",{}]],"3":[["       get_env(Par) -> undefined | {ok, Val}                                    ",{"bg":234}]],"4":[["                                                                                ",{}]],"5":[["       get_env(Application, Par) -> undefined | {ok, Val}                       ",{}]],"6":[["                                                                                ",{}]],"7":[["              Types:                                                            ",{}]],"8":[["                                                                                ",{}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:application:get_env][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  --*------------ ",{"fg":188,"bg":235}]],"10":[["  3 ",{"fg":11}],["-export",{"fg":10}],["(",{}],["[",{"fg":13}],["demo_time",{}],["/",{"fg":10}],["0",{"fg":4}],["]",{"fg":13}],[").                                                     ",{}]],"11":[["  2 ",{"fg":11}],["                                                                            ",{}]],"12":[["  1 ",{"fg":11}],["demo_time() ",{}],["->",{"fg":10}],["                                                              ",{}]],"13":[["  0 ",{"fg":11}],["    ",{}],["Props",{"fg":2,"bold":true}],[" ",{}],["=",{"fg":10}],[" application:get_env(",{}],["some_app",{"fg":130}],[", ",{}],["some_key",{"fg":130}],["),                        ",{}]],"14":[["  1 ",{"fg":11}],["    proplists:get_value(",{}],["some_prop",{"fg":130}],[", ",{}],["Props",{"fg":2,"bold":true}],[").                                  ",{}]],"19":[[" some_module.erl                                        erlang ",{"fg":59,"bg":235}],[" *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":63,"y":19}}],[9.3e-05,{"lines":{"19":[[" some_module.erl                                        erlang  ----*********** ",{"fg":59,"bg":235}]]},"cursor":{"x":0,"y":3,"visible":true}}],[0.947393,{"lines":{"3":[[" ",{}],["      get_env(Par) -> undefined | {ok, Val}",{"fg":121,"bg":15,"inverse":true}],["                                    ",{}]],"9":[[" ",{"fg":63,"bg":235}],["V-LINE",{"fg":63,"bg":235,"bold":true}],["  [ref-erlang:application:get_env][-] ",{"fg":63,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  --*------------ ",{"fg":63,"bg":235}]]},"cursor":{"x":80,"y":9,"visible":false}}],[0.000647,{"lines":{"22":[["-- VISUAL LINE --",{"bold":true}],["                                                               ",{}]]},"cursor":{"x":0,"y":3,"visible":true}}],[0.347228,{"lines":{"3":[["       get_env(Par) -> undefined | {ok, Val}",{"fg":121,"bg":15,"inverse":true}],["                                    ",{}]]},"cursor":{"y":4}}],[0.197721,{"lines":{"5":[[" ",{}],["      get_env(Application, Par) -> undefined | {ok, Val}",{"fg":121,"bg":15,"inverse":true}],["                       ",{}]]},"cursor":{"y":5}}],[0.184143,{"lines":{"0":[["                                                                                ",{}]],"2":[["       get_env(Par) -> undefined | {ok, Val}",{"fg":121,"bg":15,"inverse":true}],["                                    ",{}]],"3":[["                                                                                ",{}]],"4":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"fg":121,"bg":15,"inverse":true}],["                       ",{}]],"5":[["                                                                                ",{}]],"6":[["              Types:                                                            ",{}]],"7":[["                                                                                ",{}]],"8":[["                 Application = Par = atom()                                     ",{}]]},"cursor":{"x":43,"y":8,"visible":false}}],[0.001032,{"lines":{"20":[["                                                                                ",{}]]},"cursor":{"x":0,"y":5,"visible":true}}],[0.183014,{"lines":{"1":[["       get_env(Par) -> undefined | {ok, Val}",{"fg":121,"bg":15,"inverse":true}],["                                    ",{}]],"2":[["                                                                                ",{}]],"3":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"fg":121,"bg":15,"inverse":true}],["                       ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["             Types:",{"fg":121,"bg":15,"inverse":true}],["                                                            ",{}]],"6":[["                                                                                ",{}]],"7":[["                 Application = Par = atom()                                     ",{}]],"8":[["                 Val = term()                                                   ",{}]]},"cursor":{"x":29,"y":8,"visible":false}}],[0.001022,{"cursor":{"x":0,"y":5,"visible":true}}],[0.19099,{"lines":{"0":[["       get_env(Par) -> undefined | {ok, Val}",{"fg":121,"bg":15,"inverse":true}],["                                    ",{}]],"1":[["                                                                                ",{}]],"2":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"fg":121,"bg":15,"inverse":true}],["                       ",{}]],"3":[["                                                                                ",{}]],"4":[["              Types:",{"fg":121,"bg":15,"inverse":true}],["                                                            ",{}]],"5":[["                                                                                ",{}]],"6":[["                 Application = Par = atom()                                     ",{}]],"7":[["                 Val = term()                                                   ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.001018,{"cursor":{"x":0,"y":5,"visible":true}}],[0.174077,{"lines":{"0":[["                                                                                ",{}]],"1":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"fg":121,"bg":15,"inverse":true}],["                       ",{}]],"2":[["                                                                                ",{}]],"3":[["              Types:",{"fg":121,"bg":15,"inverse":true}],["                                                            ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["                Application = Par = atom()",{"fg":121,"bg":15,"inverse":true}],["                                     ",{}]],"6":[["                 Val = term()                                                   ",{}]],"7":[["                                                                                ",{}]],"8":[["              Returns the value of the configuration parameter Par for  Appli-  ",{}]]},"cursor":{"x":78,"y":8,"visible":false}}],[0.000725,{"cursor":{"x":0,"y":5,"visible":true}}],[0.176106,{"lines":{"0":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"fg":121,"bg":15,"inverse":true}],["                       ",{}]],"1":[["                                                                                ",{}]],"2":[["              Types:",{"fg":121,"bg":15,"inverse":true}],["                                                            ",{}]],"3":[["                                                                                ",{}]],"4":[["                 Application = Par = atom()",{"fg":121,"bg":15,"inverse":true}],["                                     ",{}]],"5":[[" ",{}],["                Val = term()",{"fg":121,"bg":15,"inverse":true}],["                                                   ",{}]],"6":[["                                                                                ",{}]],"7":[["              Returns the value of the configuration parameter Par for  Appli-  ",{}]],"8":[["              cation.  If  the application argument is omitted, it defaults to  ",{}]]},"cursor":{"x":78,"y":8,"visible":false}}],[0.001027,{"cursor":{"x":0,"y":5,"visible":true}}],[0.166263,{"lines":{"0":[["                                                                                ",{}]],"1":[["              Types:",{"fg":121,"bg":15,"inverse":true}],["                                                            ",{}]],"2":[["                                                                                ",{}]],"3":[["                 Application = Par = atom()",{"fg":121,"bg":15,"inverse":true}],["                                     ",{}]],"4":[["                 Val = term()",{"fg":121,"bg":15,"inverse":true}],["                                                   ",{}]],"5":[["                                                                                ",{}]],"6":[["              Returns the value of the configuration parameter Par for  Appli-  ",{}]],"7":[["              cation.  If  the application argument is omitted, it defaults to  ",{}]],"8":[["              the application of the calling process.                           ",{}]]},"cursor":{"x":53,"y":8,"visible":false}}],[0.0005910000000000001,{"cursor":{"x":0,"y":5,"visible":true}}],[0.499777,{"lines":{"1":[["              Types:                                                            ",{}]],"3":[["                 Application = Par = atom()                                     ",{}]],"4":[["                 Val = term()                                                   ",{}]],"5":[["                                                                                ",{"bg":234}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:application:get_env][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  --*------------ ",{"fg":188,"bg":235}]],"22":[["                                                                                ",{}]]}}],[1.603187,{"lines":{"5":[["                                                                                ",{}]],"9":[[" [ref-erlang:application:get_env][-] RO             ref-erlang  --*------------ ",{"fg":59,"bg":235}]],"13":[["  0 ",{"fg":11}],["    ",{"bg":234}],["Props",{"fg":2,"bg":234,"bold":true}],[" ",{"bg":234}],["=",{"fg":10,"bg":234}],[" application:get_env(",{"bg":234}],["some_app",{"fg":130,"bg":234}],[", ",{"bg":234}],["some_key",{"fg":130,"bg":234}],["),                        ",{"bg":234}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  ----*********** ",{"fg":188,"bg":235}]]},"cursor":{"x":28,"y":13}}],[0.540655,{"lines":{"10":[["  4 ",{"fg":11}],["-export",{"fg":10}],["(",{}],["[",{"fg":13}],["demo_time",{}],["/",{"fg":10}],["0",{"fg":4}],["]",{"fg":13}],[").                                                     ",{}]],"11":[["  3 ",{"fg":11}],["                                                                            ",{}]],"12":[["  2 ",{"fg":11}],["demo_time() ",{}],["->",{"fg":10}],["                                                              ",{}]],"13":[["  1 ",{"fg":11}],["    ",{}],["Props",{"fg":2,"bold":true}],[" ",{}],["=",{"fg":10}],[" application:get_env(",{}],["some_app",{"fg":130}],[", ",{}],["some_key",{"fg":130}],["),                        ",{}]],"14":[["  0 ",{"fg":11}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":130,"bg":234}],[", ",{"bg":234}],["Props",{"fg":2,"bg":234,"bold":true}],[").                                  ",{"bg":234}]]},"cursor":{"y":14}}],[0.350396,{"lines":{"14":[["  0 ",{"fg":11}],["    proplists:get_value",{"bg":234}],["(",{"bg":6}],["some_prop",{"fg":130,"bg":234}],[", ",{"bg":234}],["Props",{"fg":2,"bg":234,"bold":true}],[")",{"bg":6}],[".                                  ",{"bg":234}]]},"cursor":{"x":27}}],[0.350108,{"lines":{"14":[["  0 ",{"fg":11}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":130,"bg":234}],[", ",{"bg":234}],["Props",{"fg":2,"bg":234,"bold":true}],[").                                  ",{"bg":234}]]},"cursor":{"x":18}}],[0.560253,{"cursor":{"visible":false}}],[0.04823,{}],[0.024377,{"lines":{"0":[["              ing duplicates.                                                   ",{}]],"1":[["                                                                                ",{}]],"3":[["       get_value(Key, List) -> term()                                           ",{"bg":234}]],"4":[["                                                                                ",{}]],"5":[["              Types:                                                            ",{}]],"6":[["                                                                                ",{}]],"7":[["                 Key = term()                                                   ",{}]],"8":[["                 List = [term()]                                                ",{}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:proplists:get_value][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  ------*-------- ",{"fg":188,"bg":235}]],"14":[["  0 ",{"fg":11}],["    proplists:get_value(",{}],["some_prop",{"fg":130}],[", ",{}],["Props",{"fg":2,"bold":true}],[").                                  ",{}]],"19":[[" some_module.erl                                        erlang  ----*********** ",{"fg":59,"bg":235}]],"20":[["--No lines in buffer--                                                          ",{}]]},"cursor":{"x":22,"y":20}}],[0.000534,{"cursor":{"x":0,"y":3,"visible":true}}],[1.054274,{"lines":{"3":[[" ",{}],["      get_value(Key, List) -> term()",{"fg":121,"bg":15,"inverse":true}],["                                           ",{}]],"9":[[" ",{"fg":63,"bg":235}],["V-LINE",{"fg":63,"bg":235,"bold":true}],["  [ref-erlang:proplists:get_value][-] ",{"fg":63,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  ------*-------- ",{"fg":63,"bg":235}]]},"cursor":{"x":80,"y":9,"visible":false}}],[0.000696,{"lines":{"22":[["-- VISUAL LINE --",{"bold":true}],["                                                               ",{}]]},"cursor":{"x":0,"y":3,"visible":true}}],[0.305539,{"lines":{"3":[["       get_value(Key, List) -> term()",{"fg":121,"bg":15,"inverse":true}],["                                           ",{}]]},"cursor":{"y":4}}],[0.150906,{"lines":{"5":[[" ",{}],["             Types:",{"fg":121,"bg":15,"inverse":true}],["                                                            ",{}]]},"cursor":{"y":5}}],[0.150194,{"lines":{"0":[["                                                                                ",{}]],"2":[["       get_value(Key, List) -> term()",{"fg":121,"bg":15,"inverse":true}],["                                           ",{}]],"3":[["                                                                                ",{}]],"4":[["              Types:",{"fg":121,"bg":15,"inverse":true}],["                                                            ",{}]],"5":[["                                                                                ",{}]],"6":[["                 Key = term()                                                   ",{}]],"7":[["                 List = [term()]                                                ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.000592,{"lines":{"20":[["                                                                                ",{}]]},"cursor":{"x":0,"y":5,"visible":true}}],[0.168257,{"lines":{"1":[["       get_value(Key, List) -> term()",{"fg":121,"bg":15,"inverse":true}],["                                           ",{}]],"2":[["                                                                                ",{}]],"3":[["              Types:",{"fg":121,"bg":15,"inverse":true}],["                                                            ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["                Key = term()",{"fg":121,"bg":15,"inverse":true}],["                                                   ",{}]],"6":[["                 List = [term()]                                                ",{}]],"7":[["                                                                                ",{}]],"8":[["              Equivalent to get_value(Key, List, undefined).                    ",{}]]},"cursor":{"x":60,"y":8,"visible":false}}],[0.00101,{"cursor":{"x":0,"y":5,"visible":true}}],[0.142944,{"lines":{"0":[["       get_value(Key, List) -> term()",{"fg":121,"bg":15,"inverse":true}],["                                           ",{}]],"1":[["                                                                                ",{}]],"2":[["              Types:",{"fg":121,"bg":15,"inverse":true}],["                                                            ",{}]],"3":[["                                                                                ",{}]],"4":[["                 Key = term()",{"fg":121,"bg":15,"inverse":true}],["                                                   ",{}]],"5":[[" ",{}],["                List = [term()]",{"fg":121,"bg":15,"inverse":true}],["                                                ",{}]],"6":[["                                                                                ",{}]],"7":[["              Equivalent to get_value(Key, List, undefined).                    ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":32,"visible":false}}],[0.001097,{"cursor":{"x":0,"visible":true}}],[0.174865,{"lines":{"0":[["                                                                                ",{}]],"1":[["              Types:",{"fg":121,"bg":15,"inverse":true}],["                                                            ",{}]],"2":[["                                                                                ",{}]],"3":[["                 Key = term()",{"fg":121,"bg":15,"inverse":true}],["                                                   ",{}]],"4":[["                 List = [term()]",{"fg":121,"bg":15,"inverse":true}],["                                                ",{}]],"5":[["                                                                                ",{}]],"6":[["              Equivalent to get_value(Key, List, undefined).                    ",{}]],"7":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.001026,{"cursor":{"x":0,"y":5,"visible":true}}],[0.768692,{"lines":{"1":[["              Types:                                                            ",{}]],"3":[["                 Key = term()                                                   ",{}]],"4":[["                 List = [term()]                                                ",{}]],"5":[["                                                                                ",{"bg":234}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:proplists:get_value][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  ------*-------- ",{"fg":188,"bg":235}]],"22":[["                                                                                ",{}]]}}],[0.717672,{"lines":{"20":[[":bdelete                                                                        ",{}]]},"cursor":{"y":20,"visible":false}}],[0.021719,{"lines":{"0":[["  6 ",{"fg":11}],["-module",{"fg":10}],["(",{}],["some_module",{"fg":130}],[").                                                       ",{}]],"1":[["  5 ",{"fg":11}],["                                                                            ",{}]],"2":[["  4 ",{"fg":11}],["-export",{"fg":10}],["(",{}],["[",{"fg":13}],["demo_time",{}],["/",{"fg":10}],["0",{"fg":4}],["]",{"fg":13}],[").                                                     ",{}]],"3":[["  3 ",{"fg":11}],["                                                                            ",{}]],"4":[["  2 ",{"fg":11}],["demo_time() ",{}],["->",{"fg":10}],["                                                              ",{}]],"5":[["  1 ",{"fg":11}],["    ",{}],["Props",{"fg":2,"bold":true}],[" ",{}],["=",{"fg":10}],[" application:get_env(",{}],["some_app",{"fg":130}],[", ",{}],["some_key",{"fg":130}],["),                        ",{}]],"6":[["  0 ",{"fg":11}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":130,"bg":234}],[", ",{"bg":234}],["Props",{"fg":2,"bg":234,"bold":true}],[").                                  ",{"bg":234}]],"7":[["~                                                                               ",{"fg":242}]],"8":[["~                                                                               ",{"fg":242}]],"9":[["~                                                                               ",{"fg":242}]],"10":[["~                                                                               ",{"fg":242}]],"11":[["~                                                                               ",{"fg":242}]]},"cursor":{"x":80,"y":11}}],[6.2e-05,{"lines":{"12":[["~                                                                               ",{"fg":242}]],"13":[["~                                                                               ",{"fg":242}]],"14":[["~                                                                               ",{"fg":242}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":18,"y":6,"visible":true}}],[1.457958,{"lines":{"20":[[":                                                                               ",{}]]},"cursor":{"x":1,"y":20,"visible":false}}],[2.7e-05,{"lines":{"20":[[":Unite ref/erlang -vertical -default-action=split                               ",{}]]},"cursor":{"x":0}}],[0.079445,{"lines":{"22":[["-- INSERT --",{"bold":true}],["                                                                    ",{}]]},"cursor":{"x":12,"y":22}}],[0.011244,{"lines":{"0":[["›",{"fg":242}],[" ",{"inverse":true}],["> ",{"fg":2,"bold":true}],["                                                                            ",{}]],"1":[["›",{"fg":242}],[" ",{"inverse":true}],["  CosEventChannelAdmin                                                        ",{"fg":242,"bg":0}]],"2":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["CosEventChannelAdmin_ConsumerAdmin                                          ",{}]],"3":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["CosEventChannelAdmin_EventChannel                                           ",{}]],"4":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["CosEventChannelAdmin_ProxyPullConsumer                                      ",{}]],"5":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["CosEventChannelAdmin_ProxyPullSupplier                                      ",{}]],"6":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["CosEventChannelAdmin_ProxyPushConsumer                                      ",{}]],"7":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["CosEventChannelAdmin_ProxyPushSupplier                                      ",{}]],"8":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["CosEventChannelAdmin_SupplierAdmin                                          ",{}]],"9":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["CosEventDomainAdmin                                                         ",{}]],"10":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["CosEventDomainAdmin_EventDomain                                             ",{}]],"11":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["CosEventDomainAdmin_EventDomainFactory                                      ",{}]],"12":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["CosFileTransfer_Directory                                                   ",{}]],"13":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["CosFileTransfer_File                                                        ",{}]],"14":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["CosFileTransfer_FileIterator                                                ",{}]],"15":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["CosFileTransfer_FileTransferSession                                         ",{}]],"16":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["CosFileTransfer_VirtualFileSystem                                           ",{}]],"17":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["CosNaming                                                                   ",{}]],"18":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["CosNaming_BindingIterator                                                   ",{}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"fg":7,"bg":2,"inverse":true}],[" Unite  default  ref/erlang(30/628)                         [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"x":4,"y":0,"visible":true}}],[0.709834,{"lines":{"0":[["›",{"fg":242}],[" ",{"inverse":true}],["> ",{"fg":2,"bold":true}],["l                                                                           ",{}]]},"cursor":{"x":5,"visible":false}}],[0.003626,{"lines":{"1":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["l",{"fg":242,"bg":0,"bold":true}],["cnt                                                                        ",{"fg":242,"bg":0}]],"2":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["l",{"fg":2,"bold":true}],["eex                                                                        ",{}]],"3":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["l",{"fg":2,"bold":true}],["ib                                                                         ",{}]],"4":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["l",{"fg":2,"bold":true}],["ists                                                                       ",{}]],"5":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["l",{"fg":2,"bold":true}],["name                                                                       ",{}]],"6":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["l",{"fg":2,"bold":true}],["name_component                                                             ",{}]],"7":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["l",{"fg":2,"bold":true}],["og_mf_h                                                                    ",{}]],"8":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"9":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"10":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"11":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"12":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"13":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"14":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"15":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"16":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"17":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"18":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"fg":7,"bg":2,"inverse":true}],[" Unite  default  ref/erlang(7)                              [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"visible":true}}],[0.09054,{"lines":{"0":[["›",{"fg":242}],[" ",{"inverse":true}],["> ",{"fg":2,"bold":true}],["li                                                                          ",{}]]},"cursor":{"x":6,"visible":false}}],[0.003347,{"lines":{"1":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["li",{"fg":242,"bg":0,"bold":true}],["b                                                                         ",{"fg":242,"bg":0}]],"2":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["li",{"fg":2,"bold":true}],["sts                                                                       ",{}]],"3":[["›",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"4":[["›",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"5":[["›",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"6":[["›",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"7":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"fg":7,"bg":2,"inverse":true}],[" Unite  default  ref/erlang(2)                              [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"visible":true}}],[0.108665,{"lines":{"0":[["›",{"fg":242}],[" ",{"inverse":true}],["> ",{"fg":2,"bold":true}],["lis                                                                         ",{}]],"1":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["lis",{"fg":242,"bg":0,"bold":true}],["ts                                                                       ",{"fg":242,"bg":0}]],"2":[["›",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"fg":7,"bg":2,"inverse":true}],[" Unite  default  ref/erlang(1)                              [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"x":7}}],[0.122824,{"lines":{"0":[["›",{"fg":242}],[" ",{"inverse":true}],["> ",{"fg":2,"bold":true}],["list                                                                        ",{}]],"1":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["list",{"fg":242,"bg":0,"bold":true}],["s                                                                       ",{"fg":242,"bg":0}]]},"cursor":{"x":8}}],[0.095913,{"lines":{"0":[["›",{"fg":242}],[" ",{"inverse":true}],["> ",{"fg":2,"bold":true}],["lists                                                                       ",{}]],"1":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["lists",{"fg":242,"bg":0,"bold":true}],["                                                                       ",{"fg":242,"bg":0}]]},"cursor":{"x":9}}],[0.185192,{"lines":{"0":[["›",{"fg":242}],[" ",{"inverse":true}],["> ",{"fg":2,"bold":true}],["lists:                                                                      ",{}]],"1":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["lists:",{"fg":242,"bg":0,"bold":true}],["all                                                                   ",{"fg":242,"bg":0}]],"2":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["lists:",{"fg":2,"bold":true}],["any                                                                   ",{}]],"3":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["lists:",{"fg":2,"bold":true}],["append                                                                ",{}]],"4":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["lists:",{"fg":2,"bold":true}],["concat                                                                ",{}]],"5":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["lists:",{"fg":2,"bold":true}],["delete                                                                ",{}]],"6":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["lists:",{"fg":2,"bold":true}],["dropwhile                                                             ",{}]],"7":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["lists:",{"fg":2,"bold":true}],["duplicate                                                             ",{}]],"8":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["lists:",{"fg":2,"bold":true}],["filter                                                                ",{}]],"9":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["lists:",{"fg":2,"bold":true}],["filtermap                                                             ",{}]],"10":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["lists:",{"fg":2,"bold":true}],["flatlength                                                            ",{}]]},"cursor":{"x":80,"y":10,"visible":false}}],[5.1e-05,{"lines":{"11":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["lists:",{"fg":2,"bold":true}],["flatmap                                                               ",{}]],"12":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["lists:",{"fg":2,"bold":true}],["flatten                                                               ",{}]],"13":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["lists:",{"fg":2,"bold":true}],["foldl                                                                 ",{}]],"14":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["lists:",{"fg":2,"bold":true}],["foldr                                                                 ",{}]],"15":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["lists:",{"fg":2,"bold":true}],["foreach                                                               ",{}]],"16":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["lists:",{"fg":2,"bold":true}],["keydelete                                                             ",{}]],"17":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["lists:",{"fg":2,"bold":true}],["keyfind                                                               ",{}]],"18":[["~",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":13}],["lists:",{"fg":2,"bold":true}],["keymap                                                                ",{}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"fg":7,"bg":2,"inverse":true}],[" Unite  default  ref/erlang(30/59)                          [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"x":10,"y":0,"visible":true}}],[0.114115,{"lines":{"0":[["›",{"fg":242}],[" ",{"inverse":true}],["> ",{"fg":2,"bold":true}],["lists:r                                                                     ",{}]]},"cursor":{"x":11,"visible":false}}],[0.003586,{"lines":{"1":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["lists:r",{"fg":242,"bg":0,"bold":true}],["everse                                                               ",{"fg":242,"bg":0}]],"2":[["›",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"3":[["›",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"4":[["›",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"5":[["›",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"6":[["›",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"7":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"8":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"9":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"10":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"11":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"12":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"13":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"14":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"15":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"16":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"17":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"18":[["~",{"fg":242}],[" ",{"inverse":true}],["~                                                                             ",{"fg":242}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"fg":7,"bg":2,"inverse":true}],[" Unite  default  ref/erlang(1)                              [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"visible":true}}],[0.175852,{"lines":{"0":[["›",{"fg":242}],[" ",{"inverse":true}],["> ",{"fg":2,"bold":true}],["lists:re                                                                    ",{}]],"1":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["lists:re",{"fg":242,"bg":0,"bold":true}],["verse                                                               ",{"fg":242,"bg":0}]]},"cursor":{"x":12}}],[0.175796,{"lines":{"0":[["›",{"fg":242}],[" ",{"inverse":true}],["> ",{"fg":2,"bold":true}],["lists:rev                                                                   ",{}]],"1":[["›",{"fg":242}],[" ",{"inverse":true}],["  ",{"fg":242,"bg":0}],["lists:rev",{"fg":242,"bg":0,"bold":true}],["erse                                                               ",{"fg":242,"bg":0}]]},"cursor":{"x":13}}],[0.656088,{"lines":{"20":[["                                                                                ",{}]],"22":[["                                                                                ",{}]]},"cursor":{"x":0,"y":22,"visible":false}}],[0.007744,{"lines":{"19":[[">",{"fg":59,"bg":235}],[" ",{"fg":7,"bg":2,"inverse":true}],[" Unite  default  ref/erlang(1)                              [unite] - default ",{"fg":188,"bg":235}]]},"cursor":{"x":12,"y":0,"visible":true}}],[0.011781,{"cursor":{"visible":false}}],[0.014096,{"lines":{"0":[["  6 ",{"fg":11}],["-module",{"fg":10}],["(",{}],["some_module",{"fg":130}],[").                                                       ",{}]],"1":[["  5 ",{"fg":11}],["                                                                            ",{}]],"2":[["  4 ",{"fg":11}],["-export",{"fg":10}],["(",{}],["[",{"fg":13}],["demo_time",{}],["/",{"fg":10}],["0",{"fg":4}],["]",{"fg":13}],[").                                                     ",{}]],"3":[["  3 ",{"fg":11}],["                                                                            ",{}]],"4":[["  2 ",{"fg":11}],["demo_time() ",{}],["->",{"fg":10}],["                                                              ",{}]],"5":[["  1 ",{"fg":11}],["    ",{}],["Props",{"fg":2,"bold":true}],[" ",{}],["=",{"fg":10}],[" application:get_env(",{}],["some_app",{"fg":130}],[", ",{}],["some_key",{"fg":130}],["),                        ",{}]],"6":[["  0 ",{"fg":11}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":130,"bg":234}],[", ",{"bg":234}],["Props",{"fg":2,"bg":234,"bold":true}],[").                                  ",{"bg":234}]],"7":[["~                                                                               ",{"fg":242}]],"8":[["~                                                                               ",{"fg":242}]],"9":[["~                                                                               ",{"fg":242}]],"10":[["~                                                                               ",{"fg":242}]],"11":[["~                                                                               ",{"fg":242}]],"12":[["~                                                                               ",{"fg":242}]],"13":[["~                                                                               ",{"fg":242}]],"14":[["~                                                                               ",{"fg":242}]],"15":[["~                                                                               ",{"fg":242}]],"16":[["~                                                                               ",{"fg":242}]],"17":[["~                                                                               ",{"fg":242}]],"18":[["~                                                                               ",{"fg":242}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":79,"y":19}}],[0.070843,{}],[0.042742,{}],[0.010861,{}],[0.012603,{}],[0.011714,{}],[0.05096,{"lines":{"0":[["              Returns true if List1 is a prefix of List2, otherwise false.      ",{}]],"1":[["                                                                                ",{}]],"2":[["                                                                                ",{}]],"3":[["       reverse(List1) -> List2                                                  ",{"bg":234}]],"4":[["                                                                                ",{}]],"5":[["              Types:                                                            ",{}]],"6":[["                                                                                ",{}]],"7":[["                 List1 = List2 = [T]                                            ",{}]],"8":[["                 T = term()                                                     ",{}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:lists:reverse][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["           ref-erlang  ---------*----- ",{"fg":188,"bg":235}]],"10":[["  3 ",{"fg":11}],["                                                                            ",{}]],"11":[["  2 ",{"fg":11}],["demo_time() ",{}],["->",{"fg":10}],["                                                              ",{}]],"12":[["  1 ",{"fg":11}],["    ",{}],["Props",{"fg":2,"bold":true}],[" ",{}],["=",{"fg":10}],[" application:get_env(",{}],["some_app",{"fg":130}],[", ",{}],["some_key",{"fg":130}],["),                        ",{}]],"13":[["  0 ",{"fg":11}],["    proplists:get_value(",{}],["some_prop",{"fg":130}],[", ",{}],["Props",{"fg":2,"bold":true}],[").                                  ",{}]],"19":[[" some_module.erl                                        erlang  ------********* ",{"fg":59,"bg":235}]]},"cursor":{"x":0,"y":3,"visible":true}}],[0.8792759999999999,{"lines":{"3":[[" ",{}],["      reverse(List1) -> List2",{"fg":121,"bg":15,"inverse":true}],["                                                  ",{}]],"9":[[" ",{"fg":63,"bg":235}],["V-LINE",{"fg":63,"bg":235,"bold":true}],["  [ref-erlang:lists:reverse][-] ",{"fg":63,"bg":235}],["RO",{"fg":196,"bg":235}],["           ref-erlang  ---------*----- ",{"fg":63,"bg":235}]]},"cursor":{"x":80,"y":9,"visible":false}}],[0.000632,{"lines":{"22":[["-- VISUAL LINE --",{"bold":true}],["                                                               ",{}]]},"cursor":{"x":0,"y":3,"visible":true}}],[0.313266,{"lines":{"3":[["       reverse(List1) -> List2",{"fg":121,"bg":15,"inverse":true}],["                                                  ",{}]]},"cursor":{"y":4}}],[0.174985,{"lines":{"5":[[" ",{}],["             Types:",{"fg":121,"bg":15,"inverse":true}],["                                                            ",{}]]},"cursor":{"y":5}}],[0.166062,{"lines":{"0":[["                                                                                ",{}]],"2":[["       reverse(List1) -> List2",{"fg":121,"bg":15,"inverse":true}],["                                                  ",{}]],"3":[["                                                                                ",{}]],"4":[["              Types:",{"fg":121,"bg":15,"inverse":true}],["                                                            ",{}]],"5":[["                                                                                ",{}]],"6":[["                 List1 = List2 = [T]                                            ",{}]],"7":[["                 T = term()                                                     ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.000593,{"cursor":{"x":0,"y":5,"visible":true}}],[0.168339,{"lines":{"1":[["       reverse(List1) -> List2",{"fg":121,"bg":15,"inverse":true}],["                                                  ",{}]],"2":[["                                                                                ",{}]],"3":[["              Types:",{"fg":121,"bg":15,"inverse":true}],["                                                            ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["                List1 = List2 = [T]",{"fg":121,"bg":15,"inverse":true}],["                                            ",{}]],"6":[["                 T = term()                                                     ",{}]],"7":[["                                                                                ",{}]],"8":[["              Returns a list with the elements in List1 in reverse order.       ",{}]]},"cursor":{"x":73,"y":8,"visible":false}}],[0.001031,{"cursor":{"x":0,"y":5,"visible":true}}],[0.15919,{"lines":{"0":[["       reverse(List1) -> List2",{"fg":121,"bg":15,"inverse":true}],["                                                  ",{}]],"1":[["                                                                                ",{}]],"2":[["              Types:",{"fg":121,"bg":15,"inverse":true}],["                                                            ",{}]],"3":[["                                                                                ",{}]],"4":[["                 List1 = List2 = [T]",{"fg":121,"bg":15,"inverse":true}],["                                            ",{}]],"5":[[" ",{}],["                T = term()",{"fg":121,"bg":15,"inverse":true}],["                                                     ",{}]],"6":[["                                                                                ",{}]],"7":[["              Returns a list with the elements in List1 in reverse order.       ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":27,"visible":false}}],[0.001545,{"cursor":{"x":0,"visible":true}}],[0.150148,{"lines":{"0":[["                                                                                ",{}]],"1":[["              Types:",{"fg":121,"bg":15,"inverse":true}],["                                                            ",{}]],"2":[["                                                                                ",{}]],"3":[["                 List1 = List2 = [T]",{"fg":121,"bg":15,"inverse":true}],["                                            ",{}]],"4":[["                 T = term()",{"fg":121,"bg":15,"inverse":true}],["                                                     ",{}]],"5":[["                                                                                ",{}]],"6":[["              Returns a list with the elements in List1 in reverse order.       ",{}]],"7":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.001152,{"cursor":{"x":0,"y":5,"visible":true}}],[0.182629,{"lines":{"0":[["              Types:",{"fg":121,"bg":15,"inverse":true}],["                                                            ",{}]],"1":[["                                                                                ",{}]],"2":[["                 List1 = List2 = [T]",{"fg":121,"bg":15,"inverse":true}],["                                            ",{}]],"3":[["                 T = term()",{"fg":121,"bg":15,"inverse":true}],["                                                     ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["             Returns a list with the elements in List1 in reverse order.",{"fg":121,"bg":15,"inverse":true}],["       ",{}]],"6":[["                                                                                ",{}]],"8":[["       reverse(List1, Tail) -> List2                                            ",{}]]},"cursor":{"x":36,"y":8,"visible":false}}],[0.000871,{"cursor":{"x":0,"y":5,"visible":true}}],[0.690458,{"lines":{"0":[["              Types:                                                            ",{}]],"2":[["                 List1 = List2 = [T]                                            ",{}]],"3":[["                 T = term()                                                     ",{}]],"5":[["              Returns a list with the elements in List1 in reverse order.       ",{"bg":234}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:lists:reverse][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["           ref-erlang  ---------*----- ",{"fg":188,"bg":235}]],"22":[["                                                                                ",{}]]}}],[0.468261,{"lines":{"20":[[":                                                                               ",{}]]},"cursor":{"x":1,"y":20}}],[0.16,{"lines":{"20":[[":q                                                                              ",{}]]},"cursor":{"x":2}}],[0.143968,{"lines":{"20":[[":qa                                                                             ",{}]]},"cursor":{"x":3}}],[0.215623,{"lines":{"20":[[":qa!                                                                            ",{}]]},"cursor":{"x":4}}],[0.120259,{"cursor":{"x":0}}],[0.05116,{"lines":{"0":[["                                                                                ",{}]],"2":[["hq1@kosmos ",{"bg":4}],["~/blog_demo     ",{"fg":6,"bg":4}],["                                                     ",{"fg":1,"bg":4,"bold":true}]],"3":[["$ vim some_module.erl                                                           ",{}]],"5":[["                                                                                ",{}]],"8":[["                                                                                ",{}]],"9":[["                                                                                ",{}]],"10":[["                                                                                ",{}]],"11":[["                                                                                ",{}]],"12":[["                                                                                ",{}]],"13":[["                                                                                ",{}]],"14":[["                                                                                ",{}]],"15":[["                                                                                ",{}]],"16":[["                                                                                ",{}]],"17":[["                                                                                ",{}]],"18":[["                                                                                ",{}]],"19":[["                                                                                ",{}]],"20":[["                                                                                ",{}]]},"cursor":{"y":22}}],[0.001958,{}],[0.019605,{"lines":{"0":[["$ vim some_module.erl                                                           ",{}]],"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]],"21":[["hq1@kosmos ",{"bg":4}],["~/blog_demo     ",{"fg":6,"bg":4}],["                                                     ",{"fg":1,"bg":4,"bold":true}]],"22":[["$                                                                               ",{}]]},"cursor":{"x":2}}],[0.327493,{"lines":{"0":[["                                                                                ",{}]],"20":[["hq1@kosmos ",{"bg":4}],["~/blog_demo     ",{"fg":6,"bg":4}],["                                                     ",{"fg":1,"bg":4,"bold":true}]],"21":[["$                                                                               ",{}]],"22":[["                                                                                ",{}]]},"cursor":{"x":0}}]]