[[0.114171,{"lines":{"0":[["                                                                                ",{}]],"1":[["                                                                                ",{}]],"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]],"4":[["                                                                                ",{}]],"5":[["                                                                                ",{}]],"6":[["                                                                                ",{}]],"7":[["                                                                                ",{}]],"8":[["                                                                                ",{}]],"9":[["                                                                                ",{}]],"10":[["                                                                                ",{}]],"11":[["                                                                                ",{}]],"12":[["                                                                                ",{}]],"13":[["                                                                                ",{}]],"14":[["                                                                                ",{}]],"15":[["                                                                                ",{}]],"16":[["                                                                                ",{}]],"17":[["                                                                                ",{}]],"18":[["                                                                                ",{}]],"19":[["                                                                                ",{}]],"20":[["                                                                                ",{}]],"21":[["                                                                                ",{}]],"22":[["                                                                                ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.024355,{"lines":{"2":[["hq1@kosmos ",{"bg":4}],["~/blog_demo     ",{"fg":6,"bg":4}],["                                                     ",{"fg":1,"bg":4,"bold":true}]],"3":[["$                                                                               ",{}]]},"cursor":{"x":2,"y":3}}],[0.486551,{"lines":{"3":[["$ v                                                                             ",{}]]},"cursor":{"x":3}}],[0.071274,{"lines":{"3":[["$ vi                                                                            ",{}]]},"cursor":{"x":4}}],[0.159838,{"lines":{"3":[["$ vim                                                                           ",{}]]},"cursor":{"x":5}}],[0.056432,{"cursor":{"x":6}}],[0.063026,{"lines":{"3":[["$ vim s                                                                         ",{}]]},"cursor":{"x":7}}],[0.09662,{"lines":{"3":[["$ vim so                                                                        ",{}]]},"cursor":{"x":8}}],[0.046758,{"lines":{"3":[["$ vim som                                                                       ",{}]]},"cursor":{"x":9}}],[0.077109,{"lines":{"3":[["$ vim some_module.erl",{}],[" ",{"bold":true}],["                                                          ",{}]]},"cursor":{"x":22}}],[0.388056,{"lines":{"3":[["$ vim some_module.erl                                                           ",{}]]},"cursor":{"x":0,"y":4}}],[0.07893600000000001,{"cursor":{"y":22}}],[0.01064,{}],[0.01299,{"lines":{"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]]}}],[0.067049,{}],[0.000187,{"lines":{"20":[["\"some_module.erl\" 7L, 159C                                                      ",{}]]},"cursor":{"x":26,"y":20,"visible":false}}],[0.032144,{}],[0.010928,{}],[0.023186,{}],[0.051881,{"lines":{"0":[["  6 -module",{"fg":130}],["(",{}],["some_module",{"fg":1}],[").                                                       ",{}]],"1":[["  5 ",{"fg":130}],["                                                                            ",{}]],"2":[["  4 -export",{"fg":130}],["(",{}],["[",{"fg":5}],["demo_time",{}],["/",{"fg":130}],["0",{"fg":1}],["]",{"fg":5}],[").                                                     ",{}]],"3":[["  3 ",{"fg":130}],["                                                                            ",{}]],"4":[["  2 ",{"fg":130}],["demo_time() ",{}],["->",{"fg":130}],["                                                              ",{}]],"5":[["  1 ",{"fg":130}],["    ",{}],["Props",{"fg":6}],[" ",{}],["=",{"fg":130}],[" application:get_env(",{}],["some_app",{"fg":1}],[", ",{}],["some_key",{"fg":1}],["),                        ",{}]],"6":[["  0 ",{"fg":130}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":1,"bg":234}],[", ",{"bg":234}],["Props",{"fg":6,"bg":234}],[").                                  ",{"bg":234}]],"7":[["~                                                                               ",{"fg":12}]],"8":[["~                                                                               ",{"fg":12}]],"9":[["~                                                                               ",{"fg":12}]],"10":[["~                                                                               ",{"fg":12}]],"11":[["~                                                                               ",{"fg":12}]],"12":[["~                                                                               ",{"fg":12}]],"13":[["~      ",{"fg":12}],["                                                                         ",{}]]},"cursor":{"x":7,"y":13}}],[9.899999999999999e-05,{"lines":{"13":[["~                                                                               ",{"fg":12}]],"14":[["~                                                                               ",{"fg":12}]],"15":[["~                                                                               ",{"fg":12}]],"16":[["~                                                                               ",{"fg":12}]],"17":[["~                                                                               ",{"fg":12}]],"18":[["~                                                                               ",{"fg":12}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":18,"y":6,"visible":true}}],[1.082647,{"lines":{"0":[["  5 -module",{"fg":130}],["(",{}],["some_module",{"fg":1}],[").                                                       ",{}]],"1":[["  4 ",{"fg":130}],["                                                                            ",{}]],"2":[["  3 -export",{"fg":130}],["(",{}],["[",{"fg":5}],["demo_time",{}],["/",{"fg":130}],["0",{"fg":1}],["]",{"fg":5}],[").                                                     ",{}]],"3":[["  2 ",{"fg":130}],["                                                                            ",{}]],"4":[["  1 ",{"fg":130}],["demo_time() ",{}],["->",{"fg":130}],["                                                              ",{}]],"5":[["  0 ",{"fg":130}],["    ",{"bg":234}],["Props",{"fg":6,"bg":234}],[" ",{"bg":234}],["=",{"fg":130,"bg":234}],[" application:get_env(",{"bg":234}],["some_app",{"fg":1,"bg":234}],[", ",{"bg":234}],["some_key",{"fg":1,"bg":234}],["),                        ",{"bg":234}]],"6":[["  1 ",{"fg":130}],["    proplists:get_value(",{}],["some_prop",{"fg":1}],[", ",{}],["Props",{"fg":6}],[").                                  ",{}]]},"cursor":{"y":5}}],[0.302587,{"cursor":{"x":27}}],[0.415867,{"cursor":{"x":28}}],[0.426734,{"cursor":{"visible":false}}],[0.059958,{}],[0.05433,{"lines":{"0":[["              returns undefined.                                                ",{}]],"1":[["                                                                                ",{}]],"2":[["                                                                                ",{}]],"3":[["       get_env(Par) -> undefined | {ok, Val}                                    ",{"bg":234}]],"4":[["                                                                                ",{}]],"5":[["       get_env(Application, Par) -> undefined | {ok, Val}                       ",{}]],"6":[["                                                                                ",{}]],"7":[["              Types:                                                            ",{}]],"8":[["                                                                                ",{}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:application:get_env][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  --*------------ ",{"fg":188,"bg":235}]],"10":[["  3 -export",{"fg":130}],["(",{}],["[",{"fg":5}],["demo_time",{}],["/",{"fg":130}],["0",{"fg":1}],["]",{"fg":5}],[").                                                     ",{}]],"11":[["  2 ",{"fg":130}],["                                                                            ",{}]],"12":[["  1 ",{"fg":130}],["demo_time() ",{}],["->",{"fg":130}],["                                                              ",{}]],"13":[["  0 ",{"fg":130}],["    ",{}],["Props",{"fg":6}],[" ",{}],["=",{"fg":130}],[" application:get_env(",{}],["some_app",{"fg":1}],[", ",{}],["some_key",{"fg":1}],["),                        ",{}]],"14":[["  1 ",{"fg":130}],["    proplists:get_value(",{}],["some_prop",{"fg":1}],[", ",{}],["Props",{"fg":6}],[").                                  ",{}]],"19":[[" some_module.erl                                  ",{"fg":59,"bg":235}],["      erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":50,"y":19}}],[9.2e-05,{"lines":{"19":[[" some_module.erl                                        erlang  ----*********** ",{"fg":59,"bg":235}]]},"cursor":{"x":0,"y":3,"visible":true}}],[0.912337,{"lines":{"3":[[" ",{}],["      get_env(Par) -> undefined | {ok, Val}",{"bg":7}],["                                    ",{}]],"9":[[" ",{"fg":63,"bg":235}],["V-LINE",{"fg":63,"bg":235,"bold":true}],["  [ref-erlang:application:get_env][-] ",{"fg":63,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  --*------------ ",{"fg":63,"bg":235}]]},"cursor":{"x":80,"y":9,"visible":false}}],[0.000639,{"lines":{"22":[["-- VISUAL LINE --",{"bold":true}],["                                                               ",{}]]},"cursor":{"x":0,"y":3,"visible":true}}],[0.315026,{"lines":{"3":[["       get_env(Par) -> undefined | {ok, Val}",{"bg":7}],["                                    ",{}]]},"cursor":{"y":4}}],[0.175016,{"lines":{"5":[[" ",{}],["      get_env(Application, Par) -> undefined | {ok, Val}",{"bg":7}],["                       ",{}]]},"cursor":{"y":5}}],[0.174506,{"lines":{"0":[["                                                                                ",{}]],"2":[["       get_env(Par) -> undefined | {ok, Val}",{"bg":7}],["                                    ",{}]],"3":[["                                                                                ",{}]],"4":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"bg":7}],["                       ",{}]],"5":[["                                                                                ",{}]],"6":[["              Types:                                                            ",{}]],"7":[["                                                                                ",{}]],"8":[["                 Application = Par = atom()                                     ",{}]]},"cursor":{"x":43,"y":8,"visible":false}}],[0.000828,{"lines":{"20":[["                                                                                ",{}]]},"cursor":{"x":0,"y":5,"visible":true}}],[0.174932,{"lines":{"1":[["       get_env(Par) -> undefined | {ok, Val}",{"bg":7}],["                                    ",{}]],"2":[["                                                                                ",{}]],"3":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"bg":7}],["                       ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["             Types:",{"bg":7}],["                                                            ",{}]],"6":[["                                                                                ",{}]],"7":[["                 Application = Par = atom()                                     ",{}]],"8":[["                 Val = term()                                                   ",{}]]},"cursor":{"x":29,"y":8,"visible":false}}],[0.000755,{"cursor":{"x":0,"y":5,"visible":true}}],[0.184226,{"lines":{"0":[["       get_env(Par) -> undefined | {ok, Val}",{"bg":7}],["                                    ",{}]],"1":[["                                                                                ",{}]],"2":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"bg":7}],["                       ",{}]],"3":[["                                                                                ",{}]],"4":[["              Types:",{"bg":7}],["                                                            ",{}]],"5":[["                                                                                ",{}]],"6":[["                 Application = Par = atom()                                     ",{}]],"7":[["                 Val = term()                                                   ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.001039,{"cursor":{"x":0,"y":5,"visible":true}}],[0.174823,{"lines":{"0":[["                                                                                ",{}]],"1":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"bg":7}],["                       ",{}]],"2":[["                                                                                ",{}]],"3":[["              Types:",{"bg":7}],["                                                            ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["                Application = Par = atom()",{"bg":7}],["                                     ",{}]],"6":[["                 Val = term()                                                   ",{}]],"7":[["                                                                                ",{}]],"8":[["              Returns the value of the configuration parameter Par for  Appli-  ",{}]]},"cursor":{"x":78,"y":8,"visible":false}}],[0.001029,{"cursor":{"x":0,"y":5,"visible":true}}],[0.167166,{"lines":{"0":[["       get_env(Application, Par) -> undefined | {ok, Val}",{"bg":7}],["                       ",{}]],"1":[["                                                                                ",{}]],"2":[["              Types:",{"bg":7}],["                                                            ",{}]],"3":[["                                                                                ",{}]],"4":[["                 Application = Par = atom()",{"bg":7}],["                                     ",{}]],"5":[[" ",{}],["                Val = term()",{"bg":7}],["                                                   ",{}]],"6":[["                                                                                ",{}]],"7":[["              Returns the value of the configuration parameter Par for  Appli-  ",{}]],"8":[["              cation.  If  the application argument is omitted, it defaults to  ",{}]]},"cursor":{"x":78,"y":8,"visible":false}}],[0.001024,{"cursor":{"x":0,"y":5,"visible":true}}],[0.158718,{"lines":{"0":[["                                                                                ",{}]],"1":[["              Types:",{"bg":7}],["                                                            ",{}]],"2":[["                                                                                ",{}]],"3":[["                 Application = Par = atom()",{"bg":7}],["                                     ",{}]],"4":[["                 Val = term()",{"bg":7}],["                                                   ",{}]],"5":[["                                                                                ",{}]],"6":[["              Returns the value of the configuration parameter Par for  Appli-  ",{}]],"7":[["              cation.  If  the application argument is omitted, it defaults to  ",{}]],"8":[["              the application of the calling process.                           ",{}]]},"cursor":{"x":53,"y":8,"visible":false}}],[0.001007,{"cursor":{"x":0,"y":5,"visible":true}}],[0.182926,{"lines":{"0":[["              Types:",{"bg":7}],["                                                            ",{}]],"1":[["                                                                                ",{}]],"2":[["                 Application = Par = atom()",{"bg":7}],["                                     ",{}]],"3":[["                 Val = term()",{"bg":7}],["                                                   ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["             Returns the value of the configuration parameter Par for  Appli-",{"bg":7}],["  ",{}]],"6":[["              cation.  If  the application argument is omitted, it defaults to  ",{}]],"7":[["              the application of the calling process.                           ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":78,"visible":false}}],[0.001025,{"cursor":{"x":0,"visible":true}}],[0.439027,{"lines":{"0":[["                                                                                ",{}]],"1":[["                 Application = Par = atom()",{"bg":7}],["                                     ",{}]],"2":[["                 Val = term()",{"bg":7}],["                                                   ",{}]],"3":[["                                                                                ",{}]],"4":[["              Returns the value of the configuration parameter Par for  Appli-",{"bg":7}],["  ",{}]],"5":[[" ",{}],["             cation.  If  the application argument is omitted, it defaults to",{"bg":7}],["  ",{}]],"6":[["              the application of the calling process.                           ",{}]],"7":[["                                                                                ",{}]],"8":[["              If the specified application is not loaded, or the configuration  ",{}]]},"cursor":{"x":78,"y":8,"visible":false}}],[0.00102,{"cursor":{"x":0,"y":5,"visible":true}}],[0.199136,{"lines":{"0":[["                 Application = Par = atom()",{"bg":7}],["                                     ",{}]],"1":[["                 Val = term()",{"bg":7}],["                                                   ",{}]],"2":[["                                                                                ",{}]],"3":[["              Returns the value of the configuration parameter Par for  Appli-",{"bg":7}],["  ",{}]],"4":[["              cation.  If  the application argument is omitted, it defaults to",{"bg":7}],["  ",{}]],"5":[[" ",{}],["             the application of the calling process.",{"bg":7}],["                           ",{}]],"6":[["                                                                                ",{}]],"7":[["              If the specified application is not loaded, or the configuration  ",{}]],"8":[["              parameter  does  not exist, or if the process executing the call  ",{}]]},"cursor":{"x":78,"y":8,"visible":false}}],[0.001034,{"cursor":{"x":0,"y":5,"visible":true}}],[0.354383,{"lines":{"0":[["                 Application = Par = atom()                                     ",{}]],"1":[["                 Val = term()                                                   ",{}]],"3":[["              Returns the value of the configuration parameter Par for  Appli-  ",{}]],"4":[["              cation.  If  the application argument is omitted, it defaults to  ",{}]],"5":[["              the application of the calling process.                           ",{"bg":234}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:application:get_env][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  --*------------ ",{"fg":188,"bg":235}]],"22":[["                                                                                ",{}]]}}],[1.185869,{"lines":{"5":[["              the application of the calling process.                           ",{}]],"9":[[" [ref-erlang:application:get_env][-] RO             ref-erlang  --*------------ ",{"fg":59,"bg":235}]],"13":[["  0 ",{"fg":130}],["    ",{"bg":234}],["Props",{"fg":6,"bg":234}],[" ",{"bg":234}],["=",{"fg":130,"bg":234}],[" application:get_env(",{"bg":234}],["some_app",{"fg":1,"bg":234}],[", ",{"bg":234}],["some_key",{"fg":1,"bg":234}],["),                        ",{"bg":234}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  ----*********** ",{"fg":188,"bg":235}]]},"cursor":{"x":28,"y":13}}],[0.501924,{"lines":{"10":[["  4 -export",{"fg":130}],["(",{}],["[",{"fg":5}],["demo_time",{}],["/",{"fg":130}],["0",{"fg":1}],["]",{"fg":5}],[").                                                     ",{}]],"11":[["  3 ",{"fg":130}],["                                                                            ",{}]],"12":[["  2 ",{"fg":130}],["demo_time() ",{}],["->",{"fg":130}],["                                                              ",{}]],"13":[["  1 ",{"fg":130}],["    ",{}],["Props",{"fg":6}],[" ",{}],["=",{"fg":130}],[" application:get_env(",{}],["some_app",{"fg":1}],[", ",{}],["some_key",{"fg":1}],["),                        ",{}]],"14":[["  0 ",{"fg":130}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":1,"bg":234}],[", ",{"bg":234}],["Props",{"fg":6,"bg":234}],[").                                  ",{"bg":234}]]},"cursor":{"y":14}}],[0.342558,{"lines":{"14":[["  0 ",{"fg":130}],["    proplists:get_value",{"bg":234}],["(",{"bg":14}],["some_prop",{"fg":1,"bg":234}],[", ",{"bg":234}],["Props",{"fg":6,"bg":234}],[")",{"bg":14}],[".                                  ",{"bg":234}]]},"cursor":{"x":27}}],[0.375372,{"lines":{"14":[["  0 ",{"fg":130}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":1,"bg":234}],[", ",{"bg":234}],["Props",{"fg":6,"bg":234}],[").                                  ",{"bg":234}]]},"cursor":{"x":18}}],[0.550899,{"cursor":{"visible":false}}],[0.056683,{}],[0.025211,{"lines":{"0":[["              ing duplicates.                                                   ",{}]],"1":[["                                                                                ",{}]],"3":[["       get_value(Key, List) -> term()                                           ",{"bg":234}]],"4":[["                                                                                ",{}]],"5":[["              Types:                                                            ",{}]],"7":[["                 Key = term()                                                   ",{}]],"8":[["                 List = [term()]                                                ",{}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:proplists:get_value][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  ------*-------- ",{"fg":188,"bg":235}]],"14":[["  0 ",{"fg":130}],["    proplists:get_value(",{}],["some_prop",{"fg":1}],[", ",{}],["Props",{"fg":6}],[").                                  ",{}]],"19":[[" some_module.erl                                        erlang  ----*********** ",{"fg":59,"bg":235}]],"20":[["--No lines in buffer--                                                          ",{}]]},"cursor":{"x":22,"y":20}}],[0.000557,{"cursor":{"x":0,"y":3,"visible":true}}],[0.739489,{"lines":{"3":[[" ",{}],["      get_value(Key, List) -> term()",{"bg":7}],["                                           ",{}]],"9":[[" ",{"fg":63,"bg":235}],["V-LINE",{"fg":63,"bg":235,"bold":true}],["  [ref-erlang:proplists:get_value][-] ",{"fg":63,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  ------*-------- ",{"fg":63,"bg":235}]]},"cursor":{"x":80,"y":9,"visible":false}}],[0.000548,{"lines":{"22":[["-- VISUAL LINE --",{"bold":true}],["                                                               ",{}]]},"cursor":{"x":0,"y":3,"visible":true}}],[0.346244,{"lines":{"3":[["       get_value(Key, List) -> term()",{"bg":7}],["                                           ",{}]]},"cursor":{"y":4}}],[0.17589,{"lines":{"5":[[" ",{}],["             Types:",{"bg":7}],["                                                            ",{}]]},"cursor":{"y":5}}],[0.158919,{"lines":{"0":[["                                                                                ",{}]],"2":[["       get_value(Key, List) -> term()",{"bg":7}],["                                           ",{}]],"3":[["                                                                                ",{}]],"4":[["              Types:",{"bg":7}],["                                                            ",{}]],"5":[["                                                                                ",{}]],"6":[["                 Key = term()                                                   ",{}]],"7":[["                 List = [term()]                                                ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.001066,{"lines":{"20":[["                                                                                ",{}]]},"cursor":{"x":0,"y":5,"visible":true}}],[0.167026,{"lines":{"1":[["       get_value(Key, List) -> term()",{"bg":7}],["                                           ",{}]],"2":[["                                                                                ",{}]],"3":[["              Types:",{"bg":7}],["                                                            ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["                Key = term()",{"bg":7}],["                                                   ",{}]],"6":[["                 List = [term()]                                                ",{}]],"7":[["                                                                                ",{}]],"8":[["              Equivalent to get_value(Key, List, undefined).                    ",{}]]},"cursor":{"x":60,"y":8,"visible":false}}],[0.001048,{"cursor":{"x":0,"y":5,"visible":true}}],[0.158153,{"lines":{"0":[["       get_value(Key, List) -> term()",{"bg":7}],["                                           ",{}]],"1":[["                                                                                ",{}]],"2":[["              Types:",{"bg":7}],["                                                            ",{}]],"3":[["                                                                                ",{}]],"4":[["                 Key = term()",{"bg":7}],["                                                   ",{}]],"5":[[" ",{}],["                List = [term()]",{"bg":7}],["                                                ",{}]],"6":[["                                                                                ",{}]],"7":[["              Equivalent to get_value(Key, List, undefined).                    ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":32,"visible":false}}],[0.000583,{"cursor":{"x":0,"visible":true}}],[0.176214,{"lines":{"0":[["                                                                                ",{}]],"1":[["              Types:",{"bg":7}],["                                                            ",{}]],"2":[["                                                                                ",{}]],"3":[["                 Key = term()",{"bg":7}],["                                                   ",{}]],"4":[["                 List = [term()]",{"bg":7}],["                                                ",{}]],"5":[["                                                                                ",{}]],"6":[["              Equivalent to get_value(Key, List, undefined).                    ",{}]],"7":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.001225,{"cursor":{"x":0,"y":5,"visible":true}}],[0.870613,{"lines":{"0":[["              Types:",{"bg":7}],["                                                            ",{}]],"1":[["                                                                                ",{}]],"2":[["                 Key = term()",{"bg":7}],["                                                   ",{}]],"3":[["                 List = [term()]",{"bg":7}],["                                                ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["             Equivalent to get_value(Key, List, undefined).",{"bg":7}],["                    ",{}]],"6":[["                                                                                ",{}]],"8":[["       get_value(Key, List, Default) -> term()                                  ",{}]]},"cursor":{"x":46,"y":8,"visible":false}}],[0.001009,{"cursor":{"x":0,"y":5,"visible":true}}],[0.947047,{"lines":{"0":[["              Types:                                                            ",{}]],"2":[["                 Key = term()                                                   ",{}]],"3":[["                 List = [term()]                                                ",{}]],"5":[["              Equivalent to get_value(Key, List, undefined).                    ",{"bg":234}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:proplists:get_value][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  ------*-------- ",{"fg":188,"bg":235}]],"22":[["                                                                                ",{}]]}}],[0.525172,{"lines":{"0":[["proplists(3)               Erlang Module Definition               proplists(3)",{"fg":5,"bg":234}],["  ",{"bg":234}]],"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]],"4":[["NAME",{"fg":130}],["                                                                            ",{}]],"5":[["       proplists - Support functions for property lists                         ",{}]],"7":[["DESCRIPTION",{"fg":130}],["                                                                     ",{}]],"8":[["       Property  lists  are  ordinary  lists containing entries in the form of  ",{}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:proplists:get_value][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["     ref-erlang  *-------------- ",{"fg":188,"bg":235}]]},"cursor":{"y":0}}],[1.262125,{"lines":{"20":[[":bdelete                                                                        ",{}]]},"cursor":{"y":20,"visible":false}}],[0.021451,{"lines":{"0":[["  6 -module",{"fg":130}],["(",{}],["some_module",{"fg":1}],[").                                                       ",{}]],"1":[["  5 ",{"fg":130}],["                                                                            ",{}]],"2":[["  4 -export",{"fg":130}],["(",{}],["[",{"fg":5}],["demo_time",{}],["/",{"fg":130}],["0",{"fg":1}],["]",{"fg":5}],[").                                                     ",{}]],"3":[["  3 ",{"fg":130}],["                                                                            ",{}]],"4":[["  2 ",{"fg":130}],["demo_time() ",{}],["->",{"fg":130}],["                                                              ",{}]],"5":[["  1 ",{"fg":130}],["    ",{}],["Props",{"fg":6}],[" ",{}],["=",{"fg":130}],[" application:get_env(",{}],["some_app",{"fg":1}],[", ",{}],["some_key",{"fg":1}],["),                        ",{}]],"6":[["  0 ",{"fg":130}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":1,"bg":234}],[", ",{"bg":234}],["Props",{"fg":6,"bg":234}],[").                                  ",{"bg":234}]],"7":[["~                                                                               ",{"fg":12}]],"8":[["~                                                                               ",{"fg":12}]],"9":[["~                                                                               ",{"fg":12}]],"10":[["~                                                                               ",{"fg":12}]],"11":[["~                                                                               ",{"fg":12}]],"12":[["~                                                                               ",{"fg":12}]]},"cursor":{"x":80,"y":12}}],[8.3e-05,{"lines":{"13":[["~                                                                               ",{"fg":12}]],"14":[["~                                                                               ",{"fg":12}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":18,"y":6,"visible":true}}],[0.858521,{"lines":{"20":[[":                                                                               ",{}]]},"cursor":{"x":1,"y":20,"visible":false}}],[3.2e-05,{"lines":{"20":[[":Unite ref/erlang -vertical -default-action=split                               ",{}]]},"cursor":{"x":0}}],[0.07059,{"lines":{"22":[["-- INSERT --",{"bold":true}],["                                                                    ",{}]]},"cursor":{"x":12,"y":22}}],[0.011016,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["                                                                            ",{}]],"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  CosEventChannelAdmin                                                        ",{"fg":0,"bg":7}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_ConsumerAdmin                                          ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_EventChannel                                           ",{}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_ProxyPullConsumer                                      ",{}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_ProxyPullSupplier                                      ",{}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_ProxyPushConsumer                                      ",{}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_ProxyPushSupplier                                      ",{}]],"8":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_SupplierAdmin                                          ",{}]],"9":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventDomainAdmin                                                         ",{}]],"10":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventDomainAdmin_EventDomain                                             ",{}]],"11":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventDomainAdmin_EventDomainFactory                                      ",{}]],"12":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosFileTransfer_Directory                                                   ",{}]],"13":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosFileTransfer_File                                                        ",{}]],"14":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosFileTransfer_FileIterator                                                ",{}]],"15":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosFileTransfer_FileTransferSession                                         ",{}]],"16":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosFileTransfer_VirtualFileSystem                                           ",{}]],"17":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosNaming                                                                   ",{}]],"18":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosNaming_BindingIterator                                                   ",{}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(30/628)                         [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"x":4,"y":0,"visible":true}}],[0.414337,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["l                                                                           ",{}]]},"cursor":{"x":5,"visible":false}}],[0.003548,{"lines":{"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  lcnt                                                                        ",{"fg":0,"bg":7}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["l",{"fg":6}],["eex                                                                        ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["l",{"fg":6}],["ib                                                                         ",{}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["l",{"fg":6}],["ists                                                                       ",{}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["l",{"fg":6}],["name                                                                       ",{}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["l",{"fg":6}],["name_component                                                             ",{}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["l",{"fg":6}],["og_mf_h                                                                    ",{}]],"8":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"9":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"10":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"11":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"12":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"13":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"14":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"15":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"16":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"17":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"18":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(7)                              [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"visible":true}}],[0.08980200000000001,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["li                                                                          ",{}]]},"cursor":{"x":6,"visible":false}}],[0.003158,{"lines":{"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  lib                                                                         ",{"fg":0,"bg":7}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["li",{"fg":6}],["sts                                                                       ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(2)                              [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"visible":true}}],[0.112969,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["lis                                                                         ",{}]],"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  lists                                                                       ",{"fg":0,"bg":7}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(1)                              [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"x":7}}],[0.096053,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["list                                                                        ",{}]]},"cursor":{"x":8}}],[0.100629,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["lists                                                                       ",{}]]},"cursor":{"x":9}}],[0.188355,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["lists:                                                                      ",{}]],"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  lists:all                                                                   ",{"fg":0,"bg":7}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["any                                                                   ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["append                                                                ",{}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["concat                                                                ",{}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["delete                                                                ",{}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["dropwhile                                                             ",{}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["duplicate                                                             ",{}]],"8":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["filter                                                                ",{}]],"9":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["filtermap                                                             ",{}]],"10":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["flatlength                                                            ",{}]],"11":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["flatmap                                ",{}],["                               ",{"fg":12}]]},"cursor":{"x":49,"y":11,"visible":false}}],[5.1e-05,{"lines":{"11":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["flatmap                                                               ",{}]],"12":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["flatten                                                               ",{}]],"13":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["foldl                                                                 ",{}]],"14":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["foldr                                                                 ",{}]],"15":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["foreach                                                               ",{}]],"16":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["keydelete                                                             ",{}]],"17":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["keyfind                                                               ",{}]],"18":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["lists:",{"fg":6}],["keymap                                                                ",{}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(30/59)                          [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"x":10,"y":0,"visible":true}}],[0.106012,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["lists:r                                                                     ",{}]]},"cursor":{"x":11,"visible":false}}],[0.003516,{"lines":{"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  lists:reverse                                                               ",{"fg":0,"bg":7}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"8":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"9":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"10":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"11":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"12":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"13":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"14":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"15":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"16":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"17":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"18":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(1)                              [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"visible":true}}],[0.159581,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["lists:re                                                                    ",{}]]},"cursor":{"x":12}}],[0.120248,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["lists:rev                                                                   ",{}]]},"cursor":{"x":13}}],[0.077713,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["lists:reve                                                                  ",{}]]},"cursor":{"x":14}}],[0.185627,{"lines":{"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(1)                              [unite] - default ",{"fg":188,"bg":235}]]},"cursor":{"x":13}}],[0.009833999999999999,{"lines":{"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  action-1  action                                    [unite] - default ",{"fg":188,"bg":235}]],"22":[["[action] default_action: open                                                  ",{"fg":4}],[" ",{}]]},"cursor":{"x":79,"y":22,"visible":false}}],[0.023294,{"lines":{"22":[["-- INSERT --",{"bold":true}],["                                                                    ",{}]]},"cursor":{"x":12}}],[0.010321,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["                                                                            ",{}]],"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  above        ! -- (openable) horizontal above split open items              ",{"fg":0,"bg":7}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["below        !",{}],[" -- ",{"fg":5}],["(openable) ",{"fg":2}],["horizontal below split open items              ",{"fg":4}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["choose       !",{}],[" -- ",{"fg":5}],["(openable) ",{"fg":2}],["choose windows and open items                  ",{"fg":4}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["left         !",{}],[" -- ",{"fg":5}],["(openable) ",{"fg":2}],["vertical left split items                      ",{"fg":4}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["open         !",{}],[" -- ",{"fg":5}],["(ref) ",{"fg":2}],["                                                    ",{"fg":4}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["persist_open  ",{}],[" -- ",{"fg":5}],["(openable) ",{"fg":2}],["persistent open                                ",{"fg":4}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["right        !",{}],[" -- ",{"fg":5}],["(openable) ",{"fg":2}],["vertical right split open items                ",{"fg":4}]],"8":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["split        !",{}],[" -- ",{"fg":5}],["(openable) ",{"fg":2}],["horizontal split open items                    ",{"fg":4}]],"9":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["splitswitch  !",{}],[" -- ",{"fg":5}],["(openable) ",{"fg":2}],["horizontal split open items or jump to existi..",{"fg":4}]],"10":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["switch       !",{}],[" -- ",{"fg":5}],["(openable) ",{"fg":2}],["open in current window or jump to existing wi..",{"fg":4}]],"11":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["tabopen      !",{}],[" -- ",{"fg":5}],["(openable) ",{"fg":2}],["tabopen items                                  ",{"fg":4}]],"12":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["tabsplit     !",{}],[" -- ",{"fg":5}],["(openable) ",{"fg":2}],["tabopen and split items                        ",{"fg":4}]],"13":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["tabswitch    !",{}],[" -- ",{"fg":5}],["(openable) ",{"fg":2}],["open in new tab or jump to existing window/ta..",{"fg":4}]],"14":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["vsplit       !",{}],[" -- ",{"fg":5}],["(openable) ",{"fg":2}],["vertical split open items                      ",{"fg":4}]],"15":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["vsplitswitch !",{}],[" -- ",{"fg":5}],["(openable) ",{"fg":2}],["vertical split open items or jump to existing..",{"fg":4}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],["<on-1  action(15) | candidates: lists:reverse(ref/erlang)  [unite] - action-1 ",{"fg":36,"bg":235}]]},"cursor":{"x":4,"y":0,"visible":true}}],[2.085093,{"lines":{"20":[["                                                                                ",{}]],"22":[["                                                                                ",{}]]},"cursor":{"x":0,"y":22,"visible":false}}],[0.008387,{"lines":{"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],["<on-1  action(15) | candidates: lists:reverse(ref/erlang)  [unite] - action-1 ",{"fg":188,"bg":235}]]},"cursor":{"x":3,"y":0,"visible":true}}],[0.015891,{"lines":{"0":[["  6 -module",{"fg":130}],["(",{}],["some_module",{"fg":1}],[").                                                       ",{}]],"1":[["  5 ",{"fg":130}],["                                                                            ",{}]],"2":[["  4 -export",{"fg":130}],["(",{}],["[",{"fg":5}],["demo_time",{}],["/",{"fg":130}],["0",{"fg":1}],["]",{"fg":5}],[").                                                     ",{}]],"3":[["  3 ",{"fg":130}],["                                                                            ",{}]],"4":[["  2 ",{"fg":130}],["demo_time() ",{}],["->",{"fg":130}],["                                                              ",{}]],"5":[["  1 ",{"fg":130}],["    ",{}],["Props",{"fg":6}],[" ",{}],["=",{"fg":130}],[" application:get_env(",{}],["some_app",{"fg":1}],[", ",{}],["some_key",{"fg":1}],["),                        ",{}]],"6":[["  0 ",{"fg":130}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":1,"bg":234}],[", ",{"bg":234}],["Props",{"fg":6,"bg":234}],[").                                  ",{"bg":234}]],"7":[["~                                                                               ",{"fg":12}]],"8":[["~                                                                               ",{"fg":12}]],"9":[["~                                                                               ",{"fg":12}]],"10":[["~                                                                               ",{"fg":12}]],"11":[["~                                                                               ",{"fg":12}]],"12":[["~                                                                               ",{"fg":12}]],"13":[["~                                                                               ",{"fg":12}]],"14":[["~                                                                               ",{"fg":12}]],"15":[["~                                                                               ",{"fg":12}]],"16":[["~                                                                               ",{"fg":12}]],"17":[["~                                                                               ",{"fg":12}]],"18":[["~                                                                               ",{"fg":12}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":79,"y":19,"visible":false}}],[0.007941999999999999,{}],[0.059987,{}],[0.048475,{}],[0.011166,{}],[0.012618,{}],[0.010256,{}],[0.052765,{"lines":{"0":[["              Returns true if List1 is a prefix of List2, otherwise false.      ",{}]],"1":[["                                                                                ",{}]],"2":[["                                                                                ",{}]],"3":[["       reverse(List1) -> List2                                                  ",{"bg":234}]],"4":[["                                                                                ",{}]],"5":[["              Types:                                                            ",{}]],"6":[["                                                                                ",{}]],"7":[["                 List1 = List2 = [T]                                            ",{}]],"8":[["                 T = term()                                                     ",{}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:lists:reverse][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["           ref-erlang  ---------*----- ",{"fg":188,"bg":235}]],"10":[["  3 ",{"fg":130}],["                                                                            ",{}]],"11":[["  2 ",{"fg":130}],["demo_time() ",{}],["->",{"fg":130}],["                                                              ",{}]],"12":[["  1 ",{"fg":130}],["    ",{}],["Props",{"fg":6}],[" ",{}],["=",{"fg":130}],[" application:get_env(",{}],["some_app",{"fg":1}],[", ",{}],["some_key",{"fg":1}],["),                        ",{}]],"13":[["  0 ",{"fg":130}],["    proplists:get_value(",{}],["some_prop",{"fg":1}],[", ",{}],["Props",{"fg":6}],[").                                  ",{}]],"19":[[" some_module.erl                                        erlang  ------********* ",{"fg":59,"bg":235}]]},"cursor":{"x":0,"y":3}}],[7.7e-05,{"cursor":{"visible":true}}],[1.189398,{"lines":{"3":[[" ",{}],["      reverse(List1) -> List2",{"bg":7}],["                                                  ",{}]],"9":[[" ",{"fg":63,"bg":235}],["V-LINE",{"fg":63,"bg":235,"bold":true}],["  [ref-erlang:lists:reverse][-] ",{"fg":63,"bg":235}],["RO",{"fg":196,"bg":235}],["           ref-erlang  ---------*----- ",{"fg":63,"bg":235}]]},"cursor":{"x":80,"y":9,"visible":false}}],[0.000648,{"lines":{"22":[["-- VISUAL LINE --",{"bold":true}],["                                                               ",{}]]},"cursor":{"x":0,"y":3,"visible":true}}],[0.265125,{"lines":{"3":[["       reverse(List1) -> List2",{"bg":7}],["                                                  ",{}]]},"cursor":{"y":4}}],[0.174893,{"lines":{"5":[[" ",{}],["             Types:",{"bg":7}],["                                                            ",{}]]},"cursor":{"y":5}}],[0.142811,{"lines":{"0":[["                                                                                ",{}]],"2":[["       reverse(List1) -> List2",{"bg":7}],["                                                  ",{}]],"3":[["                                                                                ",{}]],"4":[["              Types:",{"bg":7}],["                                                            ",{}]],"5":[["                                                                                ",{}]],"6":[["                 List1 = List2 = [T]                                            ",{}]],"7":[["                 T = term()                                                     ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.001044,{"cursor":{"x":0,"y":5,"visible":true}}],[0.167185,{"lines":{"1":[["       reverse(List1) -> List2",{"bg":7}],["                                                  ",{}]],"2":[["                                                                                ",{}]],"3":[["              Types:",{"bg":7}],["                                                            ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["                List1 = List2 = [T]",{"bg":7}],["                                            ",{}]],"6":[["                 T = term()                                                     ",{}]],"7":[["                                                                                ",{}]],"8":[["              Returns a list with the elements in List1 in reverse order.       ",{}]]},"cursor":{"x":73,"y":8,"visible":false}}],[0.001035,{"cursor":{"x":0,"y":5,"visible":true}}],[0.150976,{"lines":{"0":[["       reverse(List1) -> List2",{"bg":7}],["                                                  ",{}]],"1":[["                                                                                ",{}]],"2":[["              Types:",{"bg":7}],["                                                            ",{}]],"3":[["                                                                                ",{}]],"4":[["                 List1 = List2 = [T]",{"bg":7}],["                                            ",{}]],"5":[[" ",{}],["                T = term()",{"bg":7}],["                                                     ",{}]],"6":[["                                                                                ",{}]],"7":[["              Returns a list with the elements in List1 in reverse order.       ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":27,"visible":false}}],[0.001047,{"cursor":{"x":0,"visible":true}}],[0.195126,{"lines":{"0":[["                                                                                ",{}]],"1":[["              Types:",{"bg":7}],["                                                            ",{}]],"2":[["                                                                                ",{}]],"3":[["                 List1 = List2 = [T]",{"bg":7}],["                                            ",{}]],"4":[["                 T = term()",{"bg":7}],["                                                     ",{}]],"5":[["                                                                                ",{}]],"6":[["              Returns a list with the elements in List1 in reverse order.       ",{}]],"7":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.000725,{"cursor":{"x":0,"y":5,"visible":true}}],[0.194946,{"lines":{"0":[["              Types:",{"bg":7}],["                                                            ",{}]],"1":[["                                                                                ",{}]],"2":[["                 List1 = List2 = [T]",{"bg":7}],["                                            ",{}]],"3":[["                 T = term()",{"bg":7}],["                                                     ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["             Returns a list with the elements in List1 in reverse order.",{"bg":7}],["       ",{}]],"6":[["                                                                                ",{}]],"8":[["       reverse(List1, Tail) -> List2                                            ",{}]]},"cursor":{"x":36,"y":8,"visible":false}}],[0.00121,{"cursor":{"x":0,"y":5,"visible":true}}],[0.867235,{"lines":{"0":[["              Types:                                                            ",{}]],"2":[["                 List1 = List2 = [T]                                            ",{}]],"3":[["                 T = term()                                                     ",{}]],"5":[["              Returns a list with the elements in List1 in reverse order.       ",{"bg":234}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  [ref-erlang:lists:reverse][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["           ref-erlang  ---------*----- ",{"fg":188,"bg":235}]],"22":[["                                                                                ",{}]]}}],[1.570896,{"lines":{"20":[[":bdelete                                                                        ",{}]]},"cursor":{"y":20,"visible":false}}],[0.021837,{"lines":{"0":[["  6 -module",{"fg":130}],["(",{}],["some_module",{"fg":1}],[").                                                       ",{}]],"1":[["  5 ",{"fg":130}],["                                                                            ",{}]],"2":[["  4 -export",{"fg":130}],["(",{}],["[",{"fg":5}],["demo_time",{}],["/",{"fg":130}],["0",{"fg":1}],["]",{"fg":5}],[").                                                     ",{}]],"3":[["  3 ",{"fg":130}],["                                                                            ",{}]],"4":[["  2 ",{"fg":130}],["demo_time() ",{}],["->",{"fg":130}],["                                                              ",{}]],"5":[["  1 ",{"fg":130}],["    ",{}],["Props",{"fg":6}],[" ",{}],["=",{"fg":130}],[" application:get_env(",{}],["some_app",{"fg":1}],[", ",{}],["some_key",{"fg":1}],["),                        ",{}]],"6":[["  0 ",{"fg":130}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":1,"bg":234}],[", ",{"bg":234}],["Props",{"fg":6,"bg":234}],[").                                  ",{"bg":234}]],"7":[["~                                                                               ",{"fg":12}]],"8":[["~                                                                               ",{"fg":12}]],"9":[["~                                                                               ",{"fg":12}]],"10":[["~                                                                               ",{"fg":12}]],"11":[["~                                                                               ",{"fg":12}]],"12":[["~                                    ",{"fg":12}],["ome_app",{"fg":1}],[", ",{}],["some_key",{"fg":1}],["),                        ",{}]]},"cursor":{"x":37,"y":12}}],[9.399999999999999e-05,{"lines":{"12":[["~                                                                               ",{"fg":12}]],"13":[["~                                                                               ",{"fg":12}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":18,"y":6,"visible":true}}],[0.697673,{"lines":{"20":[[":                                                                               ",{}]]},"cursor":{"x":1,"y":20,"visible":false}}],[2.4e-05,{"lines":{"20":[[":Unite ref/erlang -vertical -default-action=split                               ",{}]]},"cursor":{"x":0}}],[0.026052,{"lines":{"22":[["-- INSERT --",{"bold":true}],["                                                                    ",{}]]},"cursor":{"x":12,"y":22}}],[0.012503,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["                                                                            ",{}]],"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  CosEventChannelAdmin                                                        ",{"fg":0,"bg":7}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_ConsumerAdmin                                          ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_EventChannel                                           ",{}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_ProxyPullConsumer                                      ",{}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_ProxyPullSupplier                                      ",{}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_ProxyPushConsumer                                      ",{}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_ProxyPushSupplier                                      ",{}]],"8":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventChannelAdmin_SupplierAdmin                                          ",{}]],"9":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventDomainAdmin                                                         ",{}]],"10":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventDomainAdmin_EventDomain                                             ",{}]],"11":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosEventDomainAdmin_EventDomainFactory                                      ",{}]],"12":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosFileTransfer_Directory                                                   ",{}]],"13":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosFileTransfer_File                                                        ",{}]],"14":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosFileTransfer_FileIterator                                                ",{}]],"15":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosFileTransfer_FileTransferSession                                         ",{}]],"16":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosFileTransfer_VirtualFileSystem                                           ",{}]],"17":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosNaming                                                                   ",{}]],"18":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["CosNaming_BindingIterator                                                   ",{}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(30/628)                         [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"x":4,"y":0,"visible":true}}],[0.570587,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["o                                                                           ",{}]]},"cursor":{"x":5,"visible":false}}],[0.003433,{"lines":{"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  observer                                                                    ",{"fg":0,"bg":7}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["o",{"fg":6}],["dbc                                                                        ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["o",{"fg":6}],["rber                                                                       ",{}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["o",{"fg":6}],["rber_acl                                                                   ",{}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["o",{"fg":6}],["rber_diagn",{}],["o",{"fg":6}],["stics                                                           ",{}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["o",{"fg":6}],["rber_ifr                                                                   ",{}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["o",{"fg":6}],["rber_tc                                                                    ",{}]],"8":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["o",{"fg":6}],["rddict                                                                     ",{}]],"9":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["o",{"fg":6}],["rdsets                                                                     ",{}]],"10":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["o",{"fg":6}],["s                                                                          ",{}]],"11":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["o",{"fg":6}],["s_m",{}],["o",{"fg":6}],["n                                                                      ",{}]],"12":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["o",{"fg":6}],["s_m",{}],["o",{"fg":6}],["n_mib                                                                  ",{}]],"13":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["o",{"fg":6}],["s_sup                                                                      ",{}]],"14":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["o",{"fg":6}],["tp_mib                                                                     ",{}]],"15":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["o",{"fg":6}],["verl",{}],["o",{"fg":6}],["ad                                                                    ",{}]],"16":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"17":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"18":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(15)                             [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"visible":true}}],[0.098786,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["or                                                                          ",{}]]},"cursor":{"x":6,"visible":false}}],[0.003367,{"lines":{"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  orber                                                                       ",{"fg":0,"bg":7}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["or",{"fg":6}],["ber_acl                                                                   ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["or",{"fg":6}],["ber_diagnostics                                                           ",{}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["or",{"fg":6}],["ber_ifr                                                                   ",{}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["or",{"fg":6}],["ber_tc                                                                    ",{}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["or",{"fg":6}],["ddict                                                                     ",{}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["or",{"fg":6}],["dsets                                                                     ",{}]],"8":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"9":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"10":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"11":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"12":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"13":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"14":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"15":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(7)                              [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"visible":true}}],[0.100476,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["orb                                                                         ",{}]]},"cursor":{"x":7,"visible":false}}],[0.003225,{"lines":{"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orb",{"fg":6}],["er_acl                                                                   ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orb",{"fg":6}],["er_diagnostics                                                           ",{}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orb",{"fg":6}],["er_ifr                                                                   ",{}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orb",{"fg":6}],["er_tc                                                                    ",{}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["~                                                                             ",{"fg":12}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(5)                              [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"visible":true}}],[0.09179,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["orbe                                                                        ",{}]]},"cursor":{"x":8,"visible":false}}],[0.003592,{"lines":{"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orbe",{"fg":6}],["r_acl                                                                   ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orbe",{"fg":6}],["r_diagnostics                                                           ",{}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orbe",{"fg":6}],["r_ifr                                                                   ",{}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orbe",{"fg":6}],["r_tc                                                                    ",{}]]},"cursor":{"visible":true}}],[0.155782,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["orber                                                                       ",{}]]},"cursor":{"x":9,"visible":false}}],[0.002828,{"lines":{"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber",{"fg":6}],["_acl                                                                   ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber",{"fg":6}],["_diagnostics                                                           ",{}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber",{"fg":6}],["_ifr                                                                   ",{}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber",{"fg":6}],["_tc                                                                    ",{}]]},"cursor":{"visible":true}}],[0.265599,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["orber:                                                                      ",{}]]},"cursor":{"x":10,"visible":false}}],[0.068832,{}],[0.029363,{"lines":{"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  orber:activate_audit_trail                                                  ",{"fg":0,"bg":7}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["add_listen_interface                                                  ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["add_node                                                              ",{}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["close_connection                                                      ",{}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["configure                                                             ",{}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["deactivate_audit_trail                                                ",{}]],"7":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["domain                                                                ",{}]],"8":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["exception_info                                                        ",{}]],"9":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["get_ORBDefaultInitRef                                                 ",{}]],"10":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["get_ORBInitRef                                                        ",{}]],"11":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["get_tables                                                            ",{}]],"12":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["iiop_acl                                                              ",{}]],"13":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["iiop_connection_timeout                                               ",{}]],"14":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["iiop",{}],["                                                                  ",{"fg":12}]]},"cursor":{"x":14,"y":14}}],[9.3e-05,{"lines":{"14":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["iiop_connections                                                      ",{}]],"15":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["iiop_connections_pending                                              ",{}]],"16":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["iiop_in_connection_timeout                                            ",{}]],"17":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["iiop_out_ports                                                        ",{}]],"18":[["~",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["iiop_out_ports_attempts                                               ",{}]],"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(30/37)                          [unite] - default ",{"fg":36,"bg":235}]]},"cursor":{"x":10,"y":0,"visible":true}}],[0.675705,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["orber:j                                                                     ",{}]]}}],[0.072297,{"lines":{"0":[["›",{"fg":12}],[" ",{"inverse":true}],["> ",{"fg":6}],["orber:                                                                      ",{}]],"20":[["                                                                                ",{}]],"22":[["                                                                                ",{}]]},"cursor":{"x":0,"y":20,"visible":false}}],[0.009058,{"lines":{"19":[[">",{"fg":59,"bg":235}],[" ",{"inverse":true}],[" Unite  default  ref/erlang(30/37)                          [unite] - default ",{"fg":188,"bg":235}]]},"cursor":{"x":9,"y":0,"visible":true}}],[0.177442,{"lines":{"1":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["activate_audit_trail                                                  ",{}]],"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  orber:add_listen_interface                                                  ",{"fg":0,"bg":7}]]},"cursor":{"y":2}}],[0.153189,{"lines":{"2":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["add_listen_interface                                                  ",{}]],"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  orber:add_node                                                              ",{"fg":0,"bg":7}]]},"cursor":{"y":3}}],[0.142603,{"lines":{"3":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["add_node                                                              ",{}]],"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  orber:close_connection                                                      ",{"fg":0,"bg":7}]]},"cursor":{"y":4}}],[0.136031,{"lines":{"4":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["close_connection                                                      ",{}]],"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  orber:configure                                                             ",{"fg":0,"bg":7}]]},"cursor":{"y":5}}],[0.119806,{"lines":{"5":[["›",{"fg":12}],[" ",{"inverse":true}],["  ",{"fg":5}],["orber:",{"fg":6}],["configure                                                             ",{}]],"6":[["›",{"fg":12}],[" ",{"inverse":true}],["  orber:deactivate_audit_trail                                                ",{"fg":0,"bg":7}]]},"cursor":{"y":6}}],[0.185579,{"cursor":{"visible":false}}],[0.014469,{"lines":{"0":[["  6 -module",{"fg":130}],["(",{}],["some_module",{"fg":1}],[").                                                       ",{}]],"1":[["  5 ",{"fg":130}],["                                                                            ",{}]],"2":[["  4 -export",{"fg":130}],["(",{}],["[",{"fg":5}],["demo_time",{}],["/",{"fg":130}],["0",{"fg":1}],["]",{"fg":5}],[").                                                     ",{}]],"3":[["  3 ",{"fg":130}],["                                                                            ",{}]],"4":[["  2 ",{"fg":130}],["demo_time() ",{}],["->",{"fg":130}],["                                                              ",{}]],"5":[["  1 ",{"fg":130}],["    ",{}],["Props",{"fg":6}],[" ",{}],["=",{"fg":130}],[" application:get_env(",{}],["some_app",{"fg":1}],[", ",{}],["some_key",{"fg":1}],["),                        ",{}]],"6":[["  0 ",{"fg":130}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":1,"bg":234}],[", ",{"bg":234}],["Props",{"fg":6,"bg":234}],[").                                  ",{"bg":234}]],"7":[["~                                                                               ",{"fg":12}]],"8":[["~                                                                               ",{"fg":12}]],"9":[["~                                                                               ",{"fg":12}]],"10":[["~                                                                               ",{"fg":12}]],"11":[["~                                                                               ",{"fg":12}]],"12":[["~                                                                               ",{"fg":12}]],"13":[["~                                                                               ",{"fg":12}]],"14":[["~                                                                               ",{"fg":12}]],"15":[["~                                                                               ",{"fg":12}]],"16":[["~                                                                               ",{"fg":12}]],"17":[["~                                                                               ",{"fg":12}]],"18":[["~                                                                               ",{"fg":12}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":79,"y":19}}],[0.058438,{}],[0.033086,{}],[0.011369,{}],[0.0126,{}],[0.012761,{}],[0.048433,{"lines":{"0":[["              In  case  Orber  is  configured  to  use other interceptors, the  ",{}]],"1":[["              audit/trail interceptors will simply be added to that list.       ",{}]],"2":[["                                                                                ",{}]],"3":[["       deactivate_audit_trail() -> Result                                       ",{"bg":234}]],"4":[["                                                                                ",{}]],"5":[["              Types:                                                            ",{}]],"6":[["                                                                                ",{}]],"7":[["                 Result = ok | {error, Reason}                                  ",{}]],"8":[["                 Reason = string()                                              ",{}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  <lang:orber:deactivate_audit_trail][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["  ref-erlang  ------*-------- ",{"fg":188,"bg":235}]],"10":[["  3 ",{"fg":130}],["                                                                            ",{}]],"11":[["  2 ",{"fg":130}],["demo_time() ",{}],["->",{"fg":130}],["                                                              ",{}]],"12":[["  1 ",{"fg":130}],["    ",{}],["Props",{"fg":6}],[" ",{}],["=",{"fg":130}],[" application:get_env(",{}],["some_app",{"fg":1}],[", ",{}],["some_key",{"fg":1}],["),                        ",{}]],"13":[["  0 ",{"fg":130}],["    proplists:get_value(",{}],["some_prop",{"fg":1}],[", ",{}],["Props",{"fg":6}],[").                                  ",{}]],"19":[[" some_modul",{"fg":59,"bg":235}],["me_module.erl                                erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":11}}],[5e-05,{"lines":{"19":[[" some_module.erl                                        erlang  ------********* ",{"fg":59,"bg":235}]]},"cursor":{"x":0,"y":3,"visible":true}}],[1.02173,{"lines":{"3":[[" ",{}],["      deactivate_audit_trail() -> Result",{"bg":7}],["                                       ",{}]],"9":[[" ",{"fg":63,"bg":235}],["V-LINE",{"fg":63,"bg":235,"bold":true}],["  <lang:orber:deactivate_audit_trail][-] ",{"fg":63,"bg":235}],["RO",{"fg":196,"bg":235}],["  ref-erlang  ------*-------- ",{"fg":63,"bg":235}]]},"cursor":{"x":80,"y":9,"visible":false}}],[0.000606,{"lines":{"22":[["-- VISUAL LINE --",{"bold":true}],["                                                               ",{}]]},"cursor":{"x":0,"y":3,"visible":true}}],[0.255912,{"lines":{"3":[["       deactivate_audit_trail() -> Result",{"bg":7}],["                                       ",{}]]},"cursor":{"y":4}}],[0.152387,{"lines":{"5":[[" ",{}],["             Types:",{"bg":7}],["                                                            ",{}]]},"cursor":{"y":5}}],[0.166954,{"lines":{"0":[["              audit/trail interceptors will simply be added to that list.       ",{}]],"1":[["                                                                                ",{}]],"2":[["       deactivate_audit_trail() -> Result",{"bg":7}],["                                       ",{}]],"3":[["                                                                                ",{}]],"4":[["              Types:",{"bg":7}],["                                                            ",{}]],"5":[["                                                                                ",{}]],"6":[["                 Result = ok | {error, Reason}                                  ",{}]],"7":[["                 Reason = string()                                              ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":1,"y":4,"visible":false}}],[0.001095,{"cursor":{"x":0,"y":5,"visible":true}}],[0.159004,{"lines":{"0":[["                                                                                ",{}]],"1":[["       deactivate_audit_trail() -> Result",{"bg":7}],["                                       ",{}]],"2":[["                                                                                ",{}]],"3":[["              Types:",{"bg":7}],["                                                            ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["                Result = ok | {error, Reason}",{"bg":7}],["                                  ",{}]],"6":[["                 Reason = string()                                              ",{}]],"7":[["                                                                                ",{}]],"8":[["              Deactivates audit/trail for all existing incoming  and  outgoing  ",{}]]},"cursor":{"x":78,"y":8,"visible":false}}],[0.001069,{"cursor":{"x":0,"y":5,"visible":true}}],[0.158766,{"lines":{"0":[["       deactivate_audit_trail() -> Result",{"bg":7}],["                                       ",{}]],"1":[["                                                                                ",{}]],"2":[["              Types:",{"bg":7}],["                                                            ",{}]],"3":[["                                                                                ",{}]],"4":[["                 Result = ok | {error, Reason}",{"bg":7}],["                                  ",{}]],"5":[[" ",{}],["                Reason = string()",{"bg":7}],["                                              ",{}]],"6":[["                                                                                ",{}]],"7":[["              Deactivates audit/trail for all existing incoming  and  outgoing  ",{}]],"8":[["              IIOP  connections.  In  case  Orber  is  configured to use other  ",{}]]},"cursor":{"x":78,"y":8,"visible":false}}],[0.00104,{"cursor":{"x":0,"y":5,"visible":true}}],[0.142915,{"lines":{"0":[["                                                                                ",{}]],"1":[["              Types:",{"bg":7}],["                                                            ",{}]],"2":[["                                                                                ",{}]],"3":[["                 Result = ok | {error, Reason}",{"bg":7}],["                                  ",{}]],"4":[["                 Reason = string()",{"bg":7}],["                                              ",{}]],"5":[["                                                                                ",{}]],"6":[["              Deactivates audit/trail for all existing incoming  and  outgoing  ",{}]],"7":[["              IIOP  connections.  In  case  Orber  is  configured to use other  ",{}]],"8":[["              interceptors, those will still be used.                           ",{}]]},"cursor":{"x":53,"y":8,"visible":false}}],[0.001038,{"cursor":{"x":0,"y":5,"visible":true}}],[0.167052,{"lines":{"0":[["              Types:",{"bg":7}],["                                                            ",{}]],"1":[["                                                                                ",{}]],"2":[["                 Result = ok | {error, Reason}",{"bg":7}],["                                  ",{}]],"3":[["                 Reason = string()",{"bg":7}],["                                              ",{}]],"4":[["                                                                                ",{}]],"5":[[" ",{}],["             Deactivates audit/trail for all existing incoming  and  outgoing",{"bg":7}],["  ",{}]],"6":[["              IIOP  connections.  In  case  Orber  is  configured to use other  ",{}]],"7":[["              interceptors, those will still be used.                           ",{}]],"8":[["                                                                                ",{}]]},"cursor":{"x":78,"visible":false}}],[0.001044,{"cursor":{"x":0,"visible":true}}],[0.158975,{"lines":{"0":[["                                                                                ",{}]],"1":[["                 Result = ok | {error, Reason}",{"bg":7}],["                                  ",{}]],"2":[["                 Reason = string()",{"bg":7}],["                                              ",{}]],"3":[["                                                                                ",{}]],"4":[["              Deactivates audit/trail for all existing incoming  and  outgoing",{"bg":7}],["  ",{}]],"5":[[" ",{}],["             IIOP  connections.  In  case  Orber  is  configured to use other",{"bg":7}],["  ",{}]],"6":[["              interceptors, those will still be used.                           ",{}]],"7":[["                                                                                ",{}]],"8":[["       add_listen_interface(IP, Type) -> Result                                 ",{}]]},"cursor":{"x":47,"y":8,"visible":false}}],[0.001022,{"cursor":{"x":0,"y":5,"visible":true}}],[0.158978,{"lines":{"0":[["                 Result = ok | {error, Reason}",{"bg":7}],["                                  ",{}]],"1":[["                 Reason = string()",{"bg":7}],["                                              ",{}]],"2":[["                                                                                ",{}]],"3":[["              Deactivates audit/trail for all existing incoming  and  outgoing",{"bg":7}],["  ",{}]],"4":[["              IIOP  connections.  In  case  Orber  is  configured to use other",{"bg":7}],["  ",{}]],"5":[[" ",{}],["             interceptors, those will still be used.",{"bg":7}],["                           ",{}]],"6":[["                                                                                ",{}]],"7":[["       add_listen_interface(IP, Type) -> Result                                 ",{}]],"8":[["       add_listen_interface(IP, Type, Port) -> Result                           ",{}]]},"cursor":{"x":53,"y":8,"visible":false}}],[0.001117,{"cursor":{"x":0,"y":5,"visible":true}}],[0.214918,{"lines":{"0":[["                 Reason = string()",{"bg":7}],["                                              ",{}]],"1":[["                                                                                ",{}]],"2":[["              Deactivates audit/trail for all existing incoming  and  outgoing",{"bg":7}],["  ",{}]],"3":[["              IIOP  connections.  In  case  Orber  is  configured to use other",{"bg":7}],["  ",{}]],"4":[["              interceptors, those will still be used.",{"bg":7}],["                           ",{}]],"5":[["                                                                                ",{}]],"6":[["       add_listen_interface(IP, Type) -> Result                                 ",{}]],"7":[["       add_listen_interface(IP, Type, Port) -> Result                           ",{}]],"8":[["       add_listen_interface(IP, Type, ConfigurationParameters) -> Result        ",{}]]},"cursor":{"x":72,"y":8,"visible":false}}],[0.001044,{"cursor":{"x":0,"y":5,"visible":true}}],[0.473498,{"lines":{"0":[["                 Reason = string()                                              ",{}]],"2":[["              Deactivates audit/trail for all existing incoming  and  outgoing  ",{}]],"3":[["              IIOP  connections.  In  case  Orber  is  configured to use other  ",{}]],"4":[["              interceptors, those will still be used.                           ",{}]],"5":[["                                                                                ",{"bg":234}]],"9":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  <lang:orber:deactivate_audit_trail][-] ",{"fg":188,"bg":235}],["RO",{"fg":196,"bg":235}],["  ref-erlang  ------*-------- ",{"fg":188,"bg":235}]],"22":[["                                                                                ",{}]]}}],[0.484781,{"lines":{"20":[[":                                                                               ",{}]]},"cursor":{"x":1,"y":20,"visible":false}}],[3e-05,{"lines":{"20":[[":bdelete                                                                        ",{}]]},"cursor":{"x":0}}],[0.025225,{"lines":{"0":[["  6 -module",{"fg":130}],["(",{}],["some_module",{"fg":1}],[").                                                       ",{}]],"1":[["  5 ",{"fg":130}],["                                                                            ",{}]],"2":[["  4 -export",{"fg":130}],["(",{}],["[",{"fg":5}],["demo_time",{}],["/",{"fg":130}],["0",{"fg":1}],["]",{"fg":5}],[").                                                     ",{}]],"3":[["  3 ",{"fg":130}],["                                                                            ",{}]],"4":[["  2 ",{"fg":130}],["demo_time() ",{}],["->",{"fg":130}],["                                                              ",{}]],"5":[["  1 ",{"fg":130}],["    ",{}],["Props",{"fg":6}],[" ",{}],["=",{"fg":130}],[" application:get_env(",{}],["some_app",{"fg":1}],[", ",{}],["some_key",{"fg":1}],["),                        ",{}]],"6":[["  0 ",{"fg":130}],["    proplists:get_value(",{"bg":234}],["some_prop",{"fg":1,"bg":234}],[", ",{"bg":234}],["Props",{"fg":6,"bg":234}],[").                                  ",{"bg":234}]],"7":[["~                                                                               ",{"fg":12}]],"8":[["~                                                                               ",{"fg":12}]],"9":[["~                                                                               ",{"fg":12}]],"10":[["~                                                                               ",{"fg":12}]],"11":[["~                                                                               ",{"fg":12}]]},"cursor":{"x":80,"y":11}}],[7.7e-05,{"lines":{"12":[["~                                                                               ",{"fg":12}]],"13":[["~                                                                               ",{"fg":12}]],"19":[[" ",{"fg":188,"bg":235}],["NORMAL",{"fg":188,"bg":235,"bold":true}],["  some_module.erl                                erlang  *************** ",{"fg":188,"bg":235}]]},"cursor":{"x":18,"y":6,"visible":true}}],[0.445974,{"lines":{"20":[[":                                                                               ",{}]]},"cursor":{"x":1,"y":20}}],[0.144477,{"lines":{"20":[[":q                                                                              ",{}]]},"cursor":{"x":2}}],[0.167508,{"lines":{"20":[[":qa                                                                             ",{}]]},"cursor":{"x":3}}],[0.210854,{"lines":{"20":[[":qa!                                                                            ",{}]]},"cursor":{"x":4}}],[0.141385,{"cursor":{"x":0}}],[0.052703,{"lines":{"0":[["                                                                                ",{}]],"1":[["                                                                                ",{}]],"2":[["hq1@kosmos ",{"bg":4}],["~/blog_demo     ",{"fg":6,"bg":4}],["                                                     ",{"fg":1,"bg":4,"bold":true}]],"3":[["$ vim some_module.erl                                                           ",{}]],"4":[["                                                                                ",{}]],"5":[["                                                                                ",{}]],"6":[["                                                                                ",{}]],"7":[["                                                                                ",{}]],"8":[["                                                                                ",{}]],"9":[["                                                                                ",{}]],"10":[["                                                                                ",{}]],"11":[["                                                                                ",{}]],"12":[["                                                                                ",{}]],"13":[["                                                                                ",{}]],"14":[["                                                                                ",{}]],"15":[["                                                                                ",{}]],"16":[["                                                                                ",{}]],"17":[["                                                                                ",{}]],"18":[["                                                                                ",{}]],"19":[["                                                                                ",{}]],"20":[["                                                                                ",{}]]},"cursor":{"y":22}}],[0.002117,{}],[0.01942,{"lines":{"0":[["$ vim some_module.erl                                                           ",{}]],"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]],"21":[["hq1@kosmos ",{"bg":4}],["~/blog_demo     ",{"fg":6,"bg":4}],["                                                     ",{"fg":1,"bg":4,"bold":true}]],"22":[["$                                                                               ",{}]]},"cursor":{"x":2}}],[0.413949,{"lines":{"0":[["                                                                                ",{}]],"20":[["hq1@kosmos ",{"bg":4}],["~/blog_demo     ",{"fg":6,"bg":4}],["                                                     ",{"fg":1,"bg":4,"bold":true}]],"21":[["$                                                                               ",{}]],"22":[["                                                                                ",{}]]},"cursor":{"x":0}}]]